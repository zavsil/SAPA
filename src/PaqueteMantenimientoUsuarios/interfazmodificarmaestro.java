/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PaqueteMantenimientoUsuarios;

import PaqueteLogin.InterfazLogin;
import com.inet.jortho.FileUserDictionary;
import com.inet.jortho.SpellChecker;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author FRANCISCO ZAVALA SILVA
 */
public class interfazmodificarmaestro extends javax.swing.JFrame {

    String totaldeMaestros;

    /**
     * Creates new form interfazmodificarmaestro
     */
    public interfazmodificarmaestro() throws ClassNotFoundException, SQLException {
        initComponents();

        //verifica la ortografia
        SpellChecker.setUserDictionaryProvider(new FileUserDictionary());
        SpellChecker.registerDictionaries(null, null);
        SpellChecker.register(txt3NombreMaestro);
        SpellChecker.register(txt4ApellidoPaterno);
        SpellChecker.register(txt5ApellidoMaterno);
        
        //establece la posicion central de la interfaz
        this.setLocationRelativeTo(null);

        //coloca el icono en la interfaz
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icono.png")).getImage());
        //cuenta el total de maestros
        contarMaestros();
        //limpia los campos
        limpiarCampos();
        //desactiva la opcion maximizar
        this.setResizable(false);
        //desactiva la opcion cerrar
        setDefaultCloseOperation(0);
        //asigna el nombre de administrador en la interfaz
        jMenu1.setText("Mi cuenta: ADMINISTRADOR");
        //desactiva el boton guardar
        boton2Guardar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp5ModificarMaestro = new javax.swing.JPanel();
        boton4Salir = new javax.swing.JButton();
        boton2Guardar = new javax.swing.JButton();
        lab1TotaldeMaestros = new javax.swing.JLabel();
        boton1Buscar = new javax.swing.JButton();
        jp1NumeroEmpleado = new javax.swing.JPanel();
        lab2IngreseNumeroEmpleado = new javax.swing.JLabel();
        txt1IngresodeNumeroEmpleado = new javax.swing.JTextField();
        jp3Grupo = new javax.swing.JPanel();
        lab7Grado = new javax.swing.JLabel();
        lab8Grupo = new javax.swing.JLabel();
        cbox1Grado = new javax.swing.JComboBox();
        cbox2Grupo = new javax.swing.JComboBox();
        jp4Usuario = new javax.swing.JPanel();
        txt6Usuario = new javax.swing.JTextField();
        txt2Contraseña = new javax.swing.JTextField();
        lab6Contraseña = new javax.swing.JLabel();
        lab9Usuario = new javax.swing.JLabel();
        jp2DatosMaestro = new javax.swing.JPanel();
        lab4Nombre = new javax.swing.JLabel();
        lab5ApellidoPaterno = new javax.swing.JLabel();
        txt3NombreMaestro = new javax.swing.JTextField();
        txt4ApellidoPaterno = new javax.swing.JTextField();
        txt5ApellidoMaterno = new javax.swing.JTextField();
        lab3AplellidoMaterno = new javax.swing.JLabel();
        boton3Cancelar = new javax.swing.JButton();
        menu1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantenimiento Usuario/Modificar Maestro");
        setMinimumSize(new java.awt.Dimension(596, 534));
        setResizable(false);

        jp5ModificarMaestro.setBackground(new java.awt.Color(245, 245, 239));
        jp5ModificarMaestro.setToolTipText("");

        boton4Salir.setBackground(new java.awt.Color(255, 255, 255));
        boton4Salir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton4Salir.setText("Salir");
        boton4Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir(evt);
            }
        });

        boton2Guardar.setBackground(new java.awt.Color(51, 204, 0));
        boton2Guardar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton2Guardar.setText("Guardar");
        boton2Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar(evt);
            }
        });

        lab1TotaldeMaestros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab1TotaldeMaestros.setText("Total de maestros registrados:");

        boton1Buscar.setBackground(new java.awt.Color(255, 255, 51));
        boton1Buscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton1Buscar.setText("Buscar");
        boton1Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar(evt);
            }
        });

        jp1NumeroEmpleado.setBackground(new java.awt.Color(253, 251, 251));
        jp1NumeroEmpleado.setBorder(javax.swing.BorderFactory.createTitledBorder("Número de empleado"));

        lab2IngreseNumeroEmpleado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab2IngreseNumeroEmpleado.setText("Ingrese el número de empleado del maestro:");

        txt1IngresodeNumeroEmpleado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jp1NumeroEmpleadoLayout = new javax.swing.GroupLayout(jp1NumeroEmpleado);
        jp1NumeroEmpleado.setLayout(jp1NumeroEmpleadoLayout);
        jp1NumeroEmpleadoLayout.setHorizontalGroup(
            jp1NumeroEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1NumeroEmpleadoLayout.createSequentialGroup()
                .addComponent(lab2IngreseNumeroEmpleado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt1IngresodeNumeroEmpleado)
                .addGap(4, 4, 4))
        );
        jp1NumeroEmpleadoLayout.setVerticalGroup(
            jp1NumeroEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1NumeroEmpleadoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jp1NumeroEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab2IngreseNumeroEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt1IngresodeNumeroEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jp3Grupo.setBackground(new java.awt.Color(253, 251, 251));
        jp3Grupo.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del grupo"));

        lab7Grado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab7Grado.setText("Grado Asignado:");

        lab8Grupo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab8Grupo.setText("Grupo Asignado:");

        cbox1Grado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbox1Grado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opción" }));
        cbox1Grado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                obtenerGrados(evt);
            }
        });
        cbox1Grado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obtenerGrupos(evt);
            }
        });

        cbox2Grupo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbox2Grupo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opción" }));

        javax.swing.GroupLayout jp3GrupoLayout = new javax.swing.GroupLayout(jp3Grupo);
        jp3Grupo.setLayout(jp3GrupoLayout);
        jp3GrupoLayout.setHorizontalGroup(
            jp3GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3GrupoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp3GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lab7Grado)
                    .addComponent(lab8Grupo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp3GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbox1Grado, 0, 251, Short.MAX_VALUE)
                    .addComponent(cbox2Grupo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp3GrupoLayout.setVerticalGroup(
            jp3GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3GrupoLayout.createSequentialGroup()
                .addGroup(jp3GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jp3GrupoLayout.createSequentialGroup()
                        .addComponent(cbox1Grado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(jp3GrupoLayout.createSequentialGroup()
                        .addComponent(lab7Grado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lab8Grupo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 25, Short.MAX_VALUE))
            .addGroup(jp3GrupoLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(cbox2Grupo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jp4Usuario.setBackground(new java.awt.Color(253, 251, 251));
        jp4Usuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del usuario"));

        lab6Contraseña.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab6Contraseña.setText("Contraseña:");

        lab9Usuario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab9Usuario.setText("Usuario:");

        javax.swing.GroupLayout jp4UsuarioLayout = new javax.swing.GroupLayout(jp4Usuario);
        jp4Usuario.setLayout(jp4UsuarioLayout);
        jp4UsuarioLayout.setHorizontalGroup(
            jp4UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp4UsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp4UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp4UsuarioLayout.createSequentialGroup()
                        .addComponent(lab9Usuario)
                        .addGap(93, 93, 93)
                        .addComponent(txt6Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp4UsuarioLayout.createSequentialGroup()
                        .addComponent(lab6Contraseña)
                        .addGap(68, 68, 68)
                        .addComponent(txt2Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp4UsuarioLayout.setVerticalGroup(
            jp4UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp4UsuarioLayout.createSequentialGroup()
                .addGroup(jp4UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab9Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt6Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp4UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab6Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 42, Short.MAX_VALUE))
        );

        jp2DatosMaestro.setBackground(new java.awt.Color(253, 251, 251));
        jp2DatosMaestro.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del maestro"));

        lab4Nombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab4Nombre.setText("Nombre del maestro:");

        lab5ApellidoPaterno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab5ApellidoPaterno.setText("Apellido paterno:");

        lab3AplellidoMaterno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab3AplellidoMaterno.setText("Apellido materno:");

        javax.swing.GroupLayout jp2DatosMaestroLayout = new javax.swing.GroupLayout(jp2DatosMaestro);
        jp2DatosMaestro.setLayout(jp2DatosMaestroLayout);
        jp2DatosMaestroLayout.setHorizontalGroup(
            jp2DatosMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2DatosMaestroLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jp2DatosMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jp2DatosMaestroLayout.createSequentialGroup()
                        .addComponent(lab3AplellidoMaterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt5ApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp2DatosMaestroLayout.createSequentialGroup()
                        .addGroup(jp2DatosMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lab5ApellidoPaterno)
                            .addComponent(lab4Nombre))
                        .addGap(10, 10, 10)
                        .addGroup(jp2DatosMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt3NombreMaestro)
                            .addComponent(txt4ApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jp2DatosMaestroLayout.setVerticalGroup(
            jp2DatosMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2DatosMaestroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp2DatosMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp2DatosMaestroLayout.createSequentialGroup()
                        .addComponent(txt3NombreMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt4ApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp2DatosMaestroLayout.createSequentialGroup()
                        .addComponent(lab4Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lab5ApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp2DatosMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab3AplellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt5ApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        boton3Cancelar.setBackground(new java.awt.Color(255, 255, 255));
        boton3Cancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton3Cancelar.setText("Cancelar");
        boton3Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar(evt);
            }
        });

        javax.swing.GroupLayout jp5ModificarMaestroLayout = new javax.swing.GroupLayout(jp5ModificarMaestro);
        jp5ModificarMaestro.setLayout(jp5ModificarMaestroLayout);
        jp5ModificarMaestroLayout.setHorizontalGroup(
            jp5ModificarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp5ModificarMaestroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp5ModificarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jp5ModificarMaestroLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lab1TotaldeMaestros))
                    .addGroup(jp5ModificarMaestroLayout.createSequentialGroup()
                        .addGroup(jp5ModificarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp5ModificarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(boton2Guardar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                .addComponent(boton1Buscar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(boton4Salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(boton3Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(jp5ModificarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jp2DatosMaestro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jp1NumeroEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jp3Grupo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jp4Usuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(58, 58, 58))
        );
        jp5ModificarMaestroLayout.setVerticalGroup(
            jp5ModificarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp5ModificarMaestroLayout.createSequentialGroup()
                .addComponent(lab1TotaldeMaestros, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jp5ModificarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp5ModificarMaestroLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(boton1Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton2Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton3Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton4Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp5ModificarMaestroLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jp1NumeroEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jp2DatosMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jp3Grupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jp4Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menu1.setBackground(new java.awt.Color(255, 255, 255));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mi cuenta.png"))); // NOI18N
        jMenu1.setText("Mi cuenta");
        jMenu1.setToolTipText("");
        menu1.add(jMenu1);

        setJMenuBar(menu1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jp5ModificarMaestro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp5ModificarMaestro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //[12] cierra la interfaz
    private void salir(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir
        int salir = JOptionPane.showConfirmDialog(rootPane, "SEGURO DESEA SALIR?");
        if (salir == 0) {
            limpiarCampos();
            txt1IngresodeNumeroEmpleado.setEnabled(true);
            txt1IngresodeNumeroEmpleado.setText("");
            boton1Buscar.setEnabled(true);
            boton2Guardar.setEnabled(false);

            this.setVisible(false);

        }


    }//GEN-LAST:event_salir

    //[3] busca los datos del maestro 
    private void buscar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar
        //limpiar todos los campos
        limpiarCampos();

        //variables para poder saber si todo esta correcto
        boolean numeroEmpleadoCorrecto = false;
        if (txt1IngresodeNumeroEmpleado.getText().length() != 0) {

            //identificar si el numero del maestro es correcto
            try {
                if (Integer.parseInt(txt1IngresodeNumeroEmpleado.getText()) > 0) {
                    numeroEmpleadoCorrecto = true;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "EL NUMERO DE EMPELADO ES INCORRECTO", "ERROR", JOptionPane.ERROR_MESSAGE);
                boton1Buscar.setEnabled(true);
                boton2Guardar.setEnabled(false);
            }

            if (numeroEmpleadoCorrecto == true) {
                boton2Guardar.setEnabled(true);
                boton1Buscar.setEnabled(false);
                ControlMaestro maestroC = new ControlMaestro();
                ControlGrupo grupoC = new ControlGrupo();
                ControlUsuario usuarioC = new ControlUsuario();
                try {

                    //obtener de maestro
                    ResultSet resultadodeConsultar = maestroC.consultar(txt1IngresodeNumeroEmpleado.getText());

                    while (resultadodeConsultar.next()) {

                        txt3NombreMaestro.setText(resultadodeConsultar.getObject(2).toString());
                        txt4ApellidoPaterno.setText(resultadodeConsultar.getObject(3).toString());
                        txt5ApellidoMaterno.setText(resultadodeConsultar.getObject(4).toString());

                    }//find el while

                    //cuando no se ha encontrado al maestro
                    if (txt3NombreMaestro.getText().length() <= 0
                            && txt4ApellidoPaterno.getText().length() <= 0
                            && txt5ApellidoMaterno.getText().length() <= 0) {
                        JOptionPane.showMessageDialog(rootPane, "NUMERO DE EMPELADO NO SE ENCUENTRA", "ERROR", JOptionPane.ERROR_MESSAGE);
                        txt1IngresodeNumeroEmpleado.setEnabled(true);
                        boton1Buscar.setEnabled(true);
                        boton2Guardar.setEnabled(false);
                    } else {
                        //bloquear modificar matricula
                        txt1IngresodeNumeroEmpleado.setEnabled(false);
                    }

                    //obtener Grupo
                    resultadodeConsultar = grupoC.consultarGrupodeMaestro(txt1IngresodeNumeroEmpleado.getText());
                    while (resultadodeConsultar.next()) {
                        switch (Integer.parseInt(resultadodeConsultar.getObject(1).toString())) {
                            case 3:
                                cbox1Grado.setSelectedIndex(1);
                                break;
                            case 4:
                                cbox1Grado.setSelectedIndex(2);
                                break;
                            case 5:
                                cbox1Grado.setSelectedIndex(3);
                                break;
                            case 6:
                                cbox1Grado.setSelectedIndex(4);
                                break;
                        }

                        switch (resultadodeConsultar.getObject(2).toString().charAt(0)) {
                            case 'A':
                                cbox2Grupo.setSelectedIndex(1);
                                break;
                            case 'B':
                                cbox2Grupo.setSelectedIndex(2);
                                break;
                            case 'C':
                                cbox2Grupo.setSelectedIndex(3);
                                break;
                        }

                    }//find el while

                    //obtener usuario
                    resultadodeConsultar = usuarioC.consultar(txt1IngresodeNumeroEmpleado.getText(), "maestro");
                    while (resultadodeConsultar.next()) {
                        txt6Usuario.setText(resultadodeConsultar.getObject(1).toString());
                        txt2Contraseña.setText(resultadodeConsultar.getObject(2).toString());
                    }//find el while

                } catch (SQLException ex) {

                    Logger.getLogger(interfazmodificarmaestro.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {

                    Logger.getLogger(interfazmodificarmaestro.class.getName()).log(Level.SEVERE, null, ex);
                }

                //contar el actualizado de maestros
                try {
                    contarMaestros();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(interfazmodificarmaestro.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(interfazmodificarmaestro.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        } else {
            String mensaje = "";

            if (txt1IngresodeNumeroEmpleado.getText().length() <= 0) {
                mensaje = "-Numero de empleado\n";
            }

            JOptionPane.showMessageDialog(rootPane, "INGRESE EL SIGUIENTE CAMPO:\n" + mensaje + "", "ERROR", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_buscar

    //[4] valida los datos a modificar
    private void guardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar
        // TODO add your handling code here:
        //variables para poder saber si todo esta correcto 
        boolean numeroEmpleadoCorrecto = false, nombre = false, apellidoPaterno = false, apellidoMaterno = false, usuario = false, contraseña = false;
        boolean numeroEmpleadoExiste = false;
        //comparando si lo que se ha ingresado tiene una longitud distinta de 0
        if (txt1IngresodeNumeroEmpleado.getText().length() != 0
                && txt3NombreMaestro.getText().length() != 0
                && txt4ApellidoPaterno.getText().length() != 0
                && txt5ApellidoMaterno.getText().length() != 0
                && txt6Usuario.getText().length() != 0
                && txt2Contraseña.getText().length() != 0
                && cbox1Grado.getSelectedIndex() != 0
                && cbox2Grupo.getSelectedIndex() != 0) {

            //identificar si el numero del maestro es correcto
            try {
                if (Integer.parseInt(txt1IngresodeNumeroEmpleado.getText()) > 0) {
                    numeroEmpleadoCorrecto = true;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "EL NUMERO DE MAESTRO ES INCORRECTO", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

            //identificar si los datos del maestro son correcto
            nombre = esCadena(txt3NombreMaestro.getText(), "EL NOMBRE DEL MAESTRO ES INCORRECTO");
            apellidoPaterno = esCadena(txt4ApellidoPaterno.getText(), "EL APELLIDO PATERNO DEL MAESTRO ES INCORRECTO");
            apellidoMaterno = esCadena(txt5ApellidoMaterno.getText(), "EL APELLIDO MATERNO DEL MAESTRO ES INCORRECTO");
            usuario = esCadena(txt6Usuario.getText(), "EL USUARIO ES INCORRECTO: SOLO PUEDE CONTENER LETRAS");
            usuario = esMayor(txt6Usuario.getText());
            if (usuario == false) {
                JOptionPane.showMessageDialog(rootPane, "USUARIO MUY CORTO: MINIMO 5 CARACTERES", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            contraseña = esMayor(txt2Contraseña.getText());
            if (contraseña == false) {
                JOptionPane.showMessageDialog(rootPane, "CONTRASEÑA MUY CORTA: MINIMO 5 CARACTERES", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

            //revisa si el texto ingresado contiene exclusivamente letras
            if (esTextoPuro(txt3NombreMaestro.getText())
                    && esTextoPuro(txt4ApellidoPaterno.getText())
                    && esTextoPuro(txt5ApellidoMaterno.getText())) {

                //todos los datos estan correctos
                if (numeroEmpleadoCorrecto == true && nombre == true && apellidoPaterno == true && apellidoMaterno == true && usuario == true && contraseña == true) {
                    int correcto = JOptionPane.showConfirmDialog(rootPane, "TODO ESTA CORRECTO?", "FELICIDADES", JOptionPane.YES_NO_OPTION);

                    //envia a control maestro para el registro
                    if (correcto == 0) {
                        txt1IngresodeNumeroEmpleado.setEnabled(true);
                        modificar();
                        boton1Buscar.setEnabled(true);
                        boton2Guardar.setEnabled(false);
                        txt1IngresodeNumeroEmpleado.setText("");
                    }

                }

            } else {
                String mensaje = "";
                mensaje = datosACorregir();
                JOptionPane.showMessageDialog(rootPane, "REVISAR LOS SIGUIENTES CAMPOS:\n" + mensaje + "", "ERROR", JOptionPane.ERROR_MESSAGE);

            }

        } else {

            String mensaje = datosPorIngresar();

            JOptionPane.showMessageDialog(rootPane, "INGRESE LOS SIGUIENTES CAMPOS:\n" + mensaje + "", "ERROR", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_guardar

    //[11] cancela y limpia loscampos de la interfaz
    private void cancelar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar
        txt1IngresodeNumeroEmpleado.setEnabled(true);
        limpiarCampos();
        txt1IngresodeNumeroEmpleado.setText("");
        boton1Buscar.setEnabled(true);
        boton2Guardar.setEnabled(false);

    }//GEN-LAST:event_cancelar

    private void obtenerGrados(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_obtenerGrados
        // TODO add your handling code here:

        limpiarCampos();
        ControlGrupo Cgrupo = new ControlGrupo();
        try {
            ResultSet obtenerGrados = Cgrupo.obtenerGrupos();

            String grado = "";

            while (obtenerGrados.next()) {
                grado = obtenerGrados.getObject(1).toString();
                int totalGrado = cbox1Grado.getItemCount();
                int maximo = 0;

                for (int i = 0; i < totalGrado; i++) {
                    if (grado.compareTo(cbox1Grado.getItemAt(i).toString()) == 0) {
                        maximo++;

                    }
                }
                if (maximo == 0) {
                    this.cbox1Grado.addItem(grado);
                }

            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println("Error al intentar obtener datos a la bd");
        }
    }//GEN-LAST:event_obtenerGrados

    private void obtenerGrupos(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obtenerGrupos
        cbox2Grupo.removeAllItems();
        cbox2Grupo.addItem("Seleccione una opción");
        ControlGrupo Cgrupo = new ControlGrupo();
        try {
            ResultSet obtenerGrupos = Cgrupo.obtenerGrupos(Integer.parseInt(cbox1Grado.getSelectedItem().toString()));
            System.out.println("seleccione: " + cbox1Grado.getSelectedItem().toString());
            String grupo = "";

            while (obtenerGrupos.next()) {
                grupo = obtenerGrupos.getObject(1).toString();
                this.cbox2Grupo.addItem(grupo);

            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println("Error al intentar obtener datos a la bd");
        } catch (NumberFormatException | NullPointerException ex) {
        }
    }//GEN-LAST:event_obtenerGrupos

    //[8] modifica con los datos nuevos al maestro
    public void modificar() {
        ControlMaestro maestroC = new ControlMaestro();
        ControlGrupo grupoC = new ControlGrupo();
        ControlUsuario usuarioC = new ControlUsuario();
        try {

            //modificar maestro
            maestroC.modificar(txt1IngresodeNumeroEmpleado.getText(), txt3NombreMaestro.getText(), txt4ApellidoPaterno.getText(), txt5ApellidoMaterno.getText());
            //modificar de grupo
            grupoC.modificarGrupoMaestro(cbox1Grado.getSelectedIndex(), cbox2Grupo.getSelectedIndex(), txt1IngresodeNumeroEmpleado.getText());
            //modificar usuario
            usuarioC.modificarUsuarioMaestro(txt1IngresodeNumeroEmpleado.getText(), txt6Usuario.getText(), txt2Contraseña.getText());
            JOptionPane.showMessageDialog(rootPane, "MODIFICACION EXITOSA", "FELICIDADES", JOptionPane.WARNING_MESSAGE);

        } catch (SQLException ex) {
            Logger.getLogger(interfazmodificarmaestro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(interfazmodificarmaestro.class.getName()).log(Level.SEVERE, null, ex);
        }
        //limpia los campos
        limpiarCampos();
        try {
            contarMaestros();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(interfazmodificarmaestro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(interfazmodificarmaestro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //[2] limpia los campos de la interfaz
    public void limpiarCampos() {
        txt3NombreMaestro.setText("");
        txt4ApellidoPaterno.setText("");
        txt5ApellidoMaterno.setText("");
        cbox1Grado.setSelectedIndex(0);
        cbox2Grupo.setSelectedIndex(0);
        txt6Usuario.setText("");
        txt2Contraseña.setText("");

    }

    //[10] indica cuales datos falta ingresar
    public String datosPorIngresar() {
        String mensaje = "";

        if (txt1IngresodeNumeroEmpleado.getText().length() <= 0) {
            mensaje = "-Numero de empleado\n";
        }
        if (txt3NombreMaestro.getText().length() <= 0) {
            mensaje = mensaje + "-Nombre del maestro\n";
        }
        if (txt4ApellidoPaterno.getText().length() <= 0) {
            mensaje = mensaje + "-Apellido Paterno\n";
        }
        if (txt5ApellidoMaterno.getText().length() <= 0) {
            mensaje = mensaje + "-Apellido Materno\n";
        }
        if (cbox1Grado.getSelectedIndex() <= 0) {
            mensaje = mensaje + "-Grado\n";
        }
        if (cbox2Grupo.getSelectedIndex() <= 0) {
            mensaje = mensaje + "-Grupo\n";
        }
        if (txt6Usuario.getText().length() <= 0) {
            mensaje = mensaje + "-Usuario\n";
        }
        if (txt2Contraseña.getText().length() <= 0) {
            mensaje = mensaje + "-Contraseña\n";
        }
        return mensaje;
    }

    //[9] indica los datos a corregir
    public String datosACorregir() {
        String mensaje = "";

        if (!esTextoPuro(txt3NombreMaestro.getText())) {
            mensaje = mensaje + "-Nombre del maestro\n";
        }
        if (!esTextoPuro(txt4ApellidoPaterno.getText())) {
            mensaje = mensaje + "-Apellido Paterno\n";
        }
        if (!esTextoPuro(txt5ApellidoMaterno.getText())) {
            mensaje = mensaje + "-Apellido Materno\n";
        }
        if (!esTextoPuro(txt6Usuario.getText())) {
            mensaje = mensaje + "-Usuario\n";
        }
        if (!esTextoPuro(txt2Contraseña.getText())) {
            mensaje = mensaje + "-Contraseña\n";
        }

        return mensaje;
    }

    //[7] valida que el texto sean puras letras
    public boolean esTextoPuro(String texto) {
        boolean resultado = false;

        for (int i = 0; i < texto.length(); i++) {
            if (((int) texto.charAt(i) >= 65 && (int) texto.charAt(i) <= 90) || ((int) texto.charAt(i) >= 97 && (int) texto.charAt(i) <= 122)) {
                resultado = true;
            } else {
                return false;
            }

        }

        return resultado;
    }

    //[1] cuenta el total de maestros en la base de datos
    public void contarMaestros() throws ClassNotFoundException, SQLException {
        ControlMaestro maestro = new ControlMaestro();
        totaldeMaestros = maestro.contarTotalMaestros();
        lab1TotaldeMaestros.setText("Total de maestros registrados: #" + (totaldeMaestros));
    }

    //[5] valida que el texto no contenga numeros
    public boolean esCadena(String texto, String mensaje) {
        //identificar si el nombre del maestro es correcto
        boolean resultado = false;
        int contadordeNumeros = 0;
        String numerosAcomparar[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "0"};

        for (int j = 0; j < numerosAcomparar.length; j++) {
            if (texto.contains(numerosAcomparar[j])) {
                contadordeNumeros++;
            }
        }
        if (contadordeNumeros != 0) {
            JOptionPane.showMessageDialog(rootPane, mensaje, "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            resultado = true;
        }

        return resultado;
    }

    //[6]valida que el texto sea mayor a 5 caracteres
    public boolean esMayor(String texto) {
        boolean resultado = false;

        if (texto.length() >= 5) {
            resultado = true;
        }
        return resultado;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfazmodificarmaestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfazmodificarmaestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfazmodificarmaestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfazmodificarmaestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new interfazmodificarmaestro().setVisible(true);
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(interfazmodificarmaestro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton1Buscar;
    private javax.swing.JButton boton2Guardar;
    private javax.swing.JButton boton3Cancelar;
    private javax.swing.JButton boton4Salir;
    private javax.swing.JComboBox cbox1Grado;
    private javax.swing.JComboBox cbox2Grupo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jp1NumeroEmpleado;
    private javax.swing.JPanel jp2DatosMaestro;
    private javax.swing.JPanel jp3Grupo;
    private javax.swing.JPanel jp4Usuario;
    private javax.swing.JPanel jp5ModificarMaestro;
    private javax.swing.JLabel lab1TotaldeMaestros;
    private javax.swing.JLabel lab2IngreseNumeroEmpleado;
    private javax.swing.JLabel lab3AplellidoMaterno;
    private javax.swing.JLabel lab4Nombre;
    private javax.swing.JLabel lab5ApellidoPaterno;
    private javax.swing.JLabel lab6Contraseña;
    private javax.swing.JLabel lab7Grado;
    private javax.swing.JLabel lab8Grupo;
    private javax.swing.JLabel lab9Usuario;
    private javax.swing.JMenuBar menu1;
    private javax.swing.JTextField txt1IngresodeNumeroEmpleado;
    private javax.swing.JTextField txt2Contraseña;
    private javax.swing.JTextField txt3NombreMaestro;
    private javax.swing.JTextField txt4ApellidoPaterno;
    private javax.swing.JTextField txt5ApellidoMaterno;
    private javax.swing.JTextField txt6Usuario;
    // End of variables declaration//GEN-END:variables
}
