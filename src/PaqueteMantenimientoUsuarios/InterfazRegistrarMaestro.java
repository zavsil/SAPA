/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PaqueteMantenimientoUsuarios;

import PaqueteLogin.InterfazLogin;
import com.inet.jortho.FileUserDictionary;
import com.inet.jortho.SpellChecker;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author FRANCISCO ZAVALA SILVA
 */
public class InterfazRegistrarMaestro extends javax.swing.JFrame {

    public InterfazRegistrarMaestro() {
        initComponents();

        //verifica la ortografia
        SpellChecker.setUserDictionaryProvider(new FileUserDictionary());
        SpellChecker.registerDictionaries(null, null);
        SpellChecker.register(txt2NombredelMaestro);
        SpellChecker.register(txt3ApellidoPaterno);
        SpellChecker.register(txt4ApellidoMaterno);

        //establece la posicion central de la interfaz
        setLocationRelativeTo(null);

        //coloca el icono en la interfaz
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icono.png")).getImage());

        //deasctiva el maximizar
        setResizable(false);
        //desactiva el cerrar
        setDefaultCloseOperation(0);
        //cuenta el total de maestros
        try {
            contarMaestros();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(Level.SEVERE, null, ex);
        }
        //limpia los campos
        limpiarCampos();
        //establece el nombre del administrador en la interfaz
        jMenu1.setText("Mi cuenta: ADMINISTRADOR");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp1RegistrarMaestro = new javax.swing.JPanel();
        boton2Salir = new javax.swing.JButton();
        boton1Registrar = new javax.swing.JButton();
        lab1TotaldeMaestros = new javax.swing.JLabel();
        jp2Usuario = new javax.swing.JPanel();
        lab9Contraseña = new javax.swing.JLabel();
        lab8Usuario = new javax.swing.JLabel();
        txt5Usuario = new javax.swing.JTextField();
        txt6Contraseña = new javax.swing.JTextField();
        jp3Grupo = new javax.swing.JPanel();
        lab6Grado = new javax.swing.JLabel();
        lab7Grupo = new javax.swing.JLabel();
        cbox1Grado = new javax.swing.JComboBox();
        cbox2Grupo = new javax.swing.JComboBox();
        jp4DatosdelMaestro = new javax.swing.JPanel();
        txt4ApellidoMaterno = new javax.swing.JTextField();
        lab5ApellidoMaterno = new javax.swing.JLabel();
        txt3ApellidoPaterno = new javax.swing.JTextField();
        txt2NombredelMaestro = new javax.swing.JTextField();
        txt1NumeroEmpleado = new javax.swing.JTextField();
        lab2NumerodeEmpleado = new javax.swing.JLabel();
        lab3NombredelMaestro = new javax.swing.JLabel();
        lab4ApellidoPaterno = new javax.swing.JLabel();
        boton3Cancelar = new javax.swing.JButton();
        menu1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mantenimiento Usuarios/Registrar Usuario/Registrar Maestro");
        setBackground(new java.awt.Color(204, 255, 51));
        setForeground(new java.awt.Color(0, 255, 204));
        setMinimumSize(new java.awt.Dimension(573, 567));
        setResizable(false);

        jp1RegistrarMaestro.setBackground(new java.awt.Color(245, 245, 239));
        jp1RegistrarMaestro.setToolTipText("");

        boton2Salir.setBackground(new java.awt.Color(255, 255, 255));
        boton2Salir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton2Salir.setText("Salir");
        boton2Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir(evt);
            }
        });

        boton1Registrar.setBackground(new java.awt.Color(51, 204, 0));
        boton1Registrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton1Registrar.setText("Registrar");
        boton1Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrar(evt);
            }
        });

        lab1TotaldeMaestros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab1TotaldeMaestros.setText("Total de maestros registrados: #00");
        lab1TotaldeMaestros.setToolTipText("");

        jp2Usuario.setBackground(new java.awt.Color(253, 251, 251));
        jp2Usuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del usuario"));

        lab9Contraseña.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab9Contraseña.setText("Contraseña:");

        lab8Usuario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab8Usuario.setText("Usuario:");

        txt5Usuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt5Usuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                existeUsuario(evt);
            }
        });

        txt6Contraseña.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jp2UsuarioLayout = new javax.swing.GroupLayout(jp2Usuario);
        jp2Usuario.setLayout(jp2UsuarioLayout);
        jp2UsuarioLayout.setHorizontalGroup(
            jp2UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2UsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp2UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp2UsuarioLayout.createSequentialGroup()
                        .addComponent(lab8Usuario)
                        .addGap(93, 93, 93)
                        .addComponent(txt5Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp2UsuarioLayout.createSequentialGroup()
                        .addComponent(lab9Contraseña)
                        .addGap(68, 68, 68)
                        .addComponent(txt6Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp2UsuarioLayout.setVerticalGroup(
            jp2UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2UsuarioLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jp2UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab8Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt5Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp2UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab9Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt6Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jp3Grupo.setBackground(new java.awt.Color(253, 251, 251));
        jp3Grupo.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del grupo"));

        lab6Grado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab6Grado.setText("Grado Asignado:");

        lab7Grupo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab7Grupo.setText("Grupo Asignado:");

        cbox1Grado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbox1Grado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opción" }));
        cbox1Grado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                obtenerGrados(evt);
            }
        });
        cbox1Grado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obtenerGrupos(evt);
            }
        });

        cbox2Grupo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbox2Grupo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opción" }));

        javax.swing.GroupLayout jp3GrupoLayout = new javax.swing.GroupLayout(jp3Grupo);
        jp3Grupo.setLayout(jp3GrupoLayout);
        jp3GrupoLayout.setHorizontalGroup(
            jp3GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3GrupoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp3GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lab6Grado)
                    .addComponent(lab7Grupo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp3GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbox1Grado, 0, 255, Short.MAX_VALUE)
                    .addComponent(cbox2Grupo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jp3GrupoLayout.setVerticalGroup(
            jp3GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3GrupoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jp3GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbox1Grado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jp3GrupoLayout.createSequentialGroup()
                        .addComponent(lab6Grado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jp3GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lab7Grupo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbox2Grupo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jp4DatosdelMaestro.setBackground(new java.awt.Color(253, 251, 251));
        jp4DatosdelMaestro.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del maestro"));

        txt4ApellidoMaterno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lab5ApellidoMaterno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab5ApellidoMaterno.setText("Apellido materno:");

        txt3ApellidoPaterno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txt2NombredelMaestro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txt1NumeroEmpleado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt1NumeroEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                existeMaestro(evt);
            }
        });

        lab2NumerodeEmpleado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab2NumerodeEmpleado.setText("Número de empleado:");

        lab3NombredelMaestro.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab3NombredelMaestro.setText("Nombre del maestro:");

        lab4ApellidoPaterno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab4ApellidoPaterno.setText("Apellido paterno:");

        javax.swing.GroupLayout jp4DatosdelMaestroLayout = new javax.swing.GroupLayout(jp4DatosdelMaestro);
        jp4DatosdelMaestro.setLayout(jp4DatosdelMaestroLayout);
        jp4DatosdelMaestroLayout.setHorizontalGroup(
            jp4DatosdelMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp4DatosdelMaestroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp4DatosdelMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lab5ApellidoMaterno)
                    .addGroup(jp4DatosdelMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jp4DatosdelMaestroLayout.createSequentialGroup()
                            .addComponent(lab2NumerodeEmpleado)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt1NumeroEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp4DatosdelMaestroLayout.createSequentialGroup()
                            .addGroup(jp4DatosdelMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lab4ApellidoPaterno)
                                .addComponent(lab3NombredelMaestro))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jp4DatosdelMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt2NombredelMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt3ApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt4ApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp4DatosdelMaestroLayout.setVerticalGroup(
            jp4DatosdelMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp4DatosdelMaestroLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jp4DatosdelMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab2NumerodeEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt1NumeroEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp4DatosdelMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab3NombredelMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2NombredelMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp4DatosdelMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab4ApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt3ApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp4DatosdelMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab5ApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt4ApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        boton3Cancelar.setBackground(new java.awt.Color(255, 255, 255));
        boton3Cancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton3Cancelar.setText("Cancelar");
        boton3Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar(evt);
            }
        });

        javax.swing.GroupLayout jp1RegistrarMaestroLayout = new javax.swing.GroupLayout(jp1RegistrarMaestro);
        jp1RegistrarMaestro.setLayout(jp1RegistrarMaestroLayout);
        jp1RegistrarMaestroLayout.setHorizontalGroup(
            jp1RegistrarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1RegistrarMaestroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp1RegistrarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp1RegistrarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(boton1Registrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(boton2Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(boton3Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp1RegistrarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lab1TotaldeMaestros)
                    .addGroup(jp1RegistrarMaestroLayout.createSequentialGroup()
                        .addGroup(jp1RegistrarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jp4DatosdelMaestro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jp2Usuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jp3Grupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jp1RegistrarMaestroLayout.setVerticalGroup(
            jp1RegistrarMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1RegistrarMaestroLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(boton1Registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boton3Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boton2Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jp1RegistrarMaestroLayout.createSequentialGroup()
                .addComponent(lab1TotaldeMaestros, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jp4DatosdelMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jp3Grupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jp2Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 46, Short.MAX_VALUE))
        );

        menu1.setBackground(new java.awt.Color(255, 255, 255));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mi cuenta.png"))); // NOI18N
        jMenu1.setText("Mi cuenta");
        jMenu1.setToolTipText("");
        menu1.add(jMenu1);

        setJMenuBar(menu1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp1RegistrarMaestro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jp1RegistrarMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //[13] cierra las interfaces
    private void salir(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir
        int salir = JOptionPane.showConfirmDialog(rootPane, "SEGURO DESEA SALIR?");
        if (salir == 0) {
            limpiarCampos();
            this.setVisible(false);

        }
        limpiarCampos();
    }//GEN-LAST:event_salir

    //[5] valida y registra
    private void registrar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrar
        //variables para poder saber si todo esta correcto 
        boolean numeroEmpleadoCorrecto = false, nombre = false, apellidoPaterno = false, apellidoMaterno = false, usuario = false, contraseña = false;
        boolean numeroEmpleadoExiste = false;
        //comparando si lo que se ha ingresado tiene una longitud distinta de 0
        if (txt1NumeroEmpleado.getText().length() != 0
                && txt2NombredelMaestro.getText().length() != 0
                && txt3ApellidoPaterno.getText().length() != 0
                && txt4ApellidoMaterno.getText().length() != 0
                && txt5Usuario.getText().length() != 0
                && txt6Contraseña.getText().length() != 0
                && cbox1Grado.getSelectedIndex() != 0
                && cbox2Grupo.getSelectedIndex() != 0) {

            //identificar si el numero del maestro es correcto
            try {
                if (Integer.parseInt(txt1NumeroEmpleado.getText()) > 0) {
                    numeroEmpleadoCorrecto = true;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "EL NUMERO DE MAESTRO ES INCORRECTO", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

            //identificar si los datos del maestro son correcto
            nombre = esCadena(txt2NombredelMaestro.getText(), "EL NOMBRE DEL MAESTRO ES INCORRECTO");
            apellidoPaterno = esCadena(txt3ApellidoPaterno.getText(), "EL APELLIDO PATERNO DEL MAESTRO ES INCORRECTO");
            apellidoMaterno = esCadena(txt4ApellidoMaterno.getText(), "EL APELLIDO MATERNO DEL MAESTRO ES INCORRECTO");
            usuario = esCadena(txt5Usuario.getText(), "EL USUARIO ES INCORRECTO: SOLO PUEDE CONTENER LETRAS");
            usuario = esMayor(txt5Usuario.getText());
            if (usuario == false) {
                JOptionPane.showMessageDialog(rootPane, "USUARIO MUY CORTO: MINIMO 5 CARACTERES", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            contraseña = esMayor(txt6Contraseña.getText());
            if (contraseña == false) {
                JOptionPane.showMessageDialog(rootPane, "CONTRASEÑA MUY CORTA: MINIMO 5 CARACTERES", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

            //revisa si el texto ingresado contiene exclusivamente letras
            if (esTextoPuro(txt3ApellidoPaterno.getText())
                    && esTextoPuro(txt4ApellidoMaterno.getText())) {

                //todos los datos estan correctos
                if (numeroEmpleadoCorrecto == true && nombre == true && apellidoPaterno == true && apellidoMaterno == true && usuario == true && contraseña == true) {
                    int correcto = JOptionPane.showConfirmDialog(rootPane, "TODO ESTA CORRECTO?", "FELICIDADES", JOptionPane.YES_NO_OPTION);

                    //envia a control maestro para el registro
                    if (correcto == 0) {

                        ControlMaestro maestroC = new ControlMaestro();
                        ControlGrupo grupoC = new ControlGrupo();
                        ControlUsuario usuarioC = new ControlUsuario();
                        try {

                            //registro de maestro
                            maestroC.registrar(txt1NumeroEmpleado.getText(), txt2NombredelMaestro.getText(), txt3ApellidoPaterno.getText(), txt4ApellidoMaterno.getText());
                            //registro de usuario
                            usuarioC.registrarUsuarioMaestro(txt1NumeroEmpleado.getText(), txt5Usuario.getText(), txt6Contraseña.getText());
                            //registro de grupo
                            grupoC.registrarMaestroalGrupo(Integer.parseInt(cbox1Grado.getSelectedItem().toString()), cbox2Grupo.getSelectedItem().toString(), txt1NumeroEmpleado.getText());

                            JOptionPane.showMessageDialog(rootPane, "REGISTRO EXITOSO", "FELICIDADES", JOptionPane.WARNING_MESSAGE);

                        } catch (SQLException ex) {
                            Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        //limpia los campos
                        limpiarCampos();
                        try {
                            contarMaestros();
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (SQLException ex) {
                            Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }

                }

            } else {
                String mensaje = "";
                mensaje = datosACorregir();
                JOptionPane.showMessageDialog(rootPane, "REVISAR LOS SIGUIENTES CAMPOS:\n" + mensaje + "", "ERROR", JOptionPane.ERROR_MESSAGE);

            }

        } else {

            String mensaje = datosPorIngresar();

            JOptionPane.showMessageDialog(rootPane, "INGRESE LOS SIGUIENTES CAMPOS:\n" + mensaje + "", "ERROR", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_registrar

    //[10] indica donde existen errores
    public String datosACorregir() {
        String mensaje = "";

        if (!esTextoPuro(txt3ApellidoPaterno.getText())) {
            mensaje = mensaje + "-Apellido Paterno\n";
        }
        if (!esTextoPuro(txt4ApellidoMaterno.getText())) {
            mensaje = mensaje + "-Apellido Materno\n";
        }
        if (!esTextoPuro(txt5Usuario.getText())) {
            mensaje = mensaje + "-Usuario\n";
        }
        if (!esTextoPuro(txt6Contraseña.getText())) {
            mensaje = mensaje + "-Contraseña\n";
        }

        return mensaje;
    }

    //[11] indican los campos que faltan por ingresar
    public String datosPorIngresar() {
        String mensaje = "";

        if (txt1NumeroEmpleado.getText().length() <= 0) {
            mensaje = "-Numero de empleado\n";
        }
        if (txt2NombredelMaestro.getText().length() <= 0) {
            mensaje = mensaje + "-Nombre del maestro\n";
        }
        if (txt3ApellidoPaterno.getText().length() <= 0) {
            mensaje = mensaje + "-Apellido Paterno\n";
        }
        if (txt4ApellidoMaterno.getText().length() <= 0) {
            mensaje = mensaje + "-Apellido Materno\n";
        }
        if (cbox1Grado.getSelectedIndex() <= 0) {
            mensaje = mensaje + "-Grado\n";
        }
        if (cbox2Grupo.getSelectedIndex() <= 0) {
            mensaje = mensaje + "-Grupo\n";
        }
        if (txt5Usuario.getText().length() <= 0) {
            mensaje = mensaje + "-Usuario\n";
        }
        if (txt6Contraseña.getText().length() <= 0) {
            mensaje = mensaje + "-Contraseña\n";
        }
        return mensaje;
    }

    //[2] limpia los campos
    public void limpiarCampos() {
        txt1NumeroEmpleado.setText("");
        txt2NombredelMaestro.setText("");
        txt3ApellidoPaterno.setText("");
        txt4ApellidoMaterno.setText("");
        txt5Usuario.setText("");
        txt6Contraseña.setText("");

        cbox2Grupo.removeAllItems();
        cbox2Grupo.addItem("Seleccione una opción");

        cbox1Grado.removeAllItems();
        cbox1Grado.addItem("Seleccione una opción");
    }

    //[6] valida que el texto ingresado no contenga numeros
    public boolean esCadena(String texto, String mensaje) {
        //identificar si el nombre del maestro es correcto
        boolean resultado = false;
        int contadordeNumeros = 0;
        String numerosAcomparar[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "0"};

        for (int j = 0; j < numerosAcomparar.length; j++) {
            if (texto.contains(numerosAcomparar[j])) {
                contadordeNumeros++;
            }
        }
        if (contadordeNumeros != 0) {
            JOptionPane.showMessageDialog(rootPane, mensaje, "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            resultado = true;
        }

        return resultado;
    }

    //[7]
    public boolean esMayor(String texto) {
        boolean resultado = false;

        if (texto.length() >= 5) {
            resultado = true;
        }
        return resultado;
    }

    //[1] cuenta el total de maestros en la base de datos
    public void contarMaestros() throws ClassNotFoundException, SQLException {
        ControlMaestro maestro = new ControlMaestro();
        String totaldeMaestros = maestro.contarTotalMaestros();
        lab1TotaldeMaestros.setText("Total de maestros registrados: #" + (totaldeMaestros));
    }

    //[8]
    public boolean esTextoPuro(String texto) {
        boolean resultado = false;

        for (int i = 0; i < texto.length(); i++) {
            if (((int) texto.charAt(i) >= 65 && (int) texto.charAt(i) <= 90) || ((int) texto.charAt(i) >= 97 && (int) texto.charAt(i) <= 122)) {
                resultado = true;
            } else {
                return false;
            }

        }

        return resultado;
    }

    //[3] indica si existe maestro
    private void existeMaestro(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_existeMaestro
        //saber si el maestro ya existe
        String existe = "";
        try {
            ControlMaestro maestroC = new ControlMaestro();
            ResultSet resultadodeConsultar = maestroC.consultar(txt1NumeroEmpleado.getText());

            while (resultadodeConsultar.next()) {

                existe = (resultadodeConsultar.getObject(1).toString());

            }//find el while

            if (existe.length() > 0) {
                JOptionPane.showMessageDialog(rootPane, "EL NUMERO DE EMPELADO YA EXISTE", "ERROR", JOptionPane.ERROR_MESSAGE);
                limpiarCampos();
            }
        } catch (SQLException ex) {
            Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(rootPane, "NUMERO DE EMPLEADO NO VALIDO", "ERROR", JOptionPane.ERROR_MESSAGE);

            System.out.println("NUMERO NO VALIDO " + ex.toString());
        }

    }//GEN-LAST:event_existeMaestro

    //[4] indica si existe usuario
    private void existeUsuario(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_existeUsuario
        //saber si el usuario ya existe
        String existe = "";
        try {
            ControlUsuario usuarioC = new ControlUsuario();
            ResultSet resultadodeConsultar = usuarioC.consultarNombreUsuario(txt5Usuario.getText());

            while (resultadodeConsultar.next()) {

                existe = (resultadodeConsultar.getObject(1).toString());

            }//find el while

            if (existe.length() > 0) {
                JOptionPane.showMessageDialog(rootPane, "EL NOMBRE DE USUARIO YA EXISTE", "ERROR", JOptionPane.ERROR_MESSAGE);
                txt5Usuario.setText("");
                txt6Contraseña.setText("");
            }
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "NOMBRE DE USUARIO NO VALIDO", "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_existeUsuario

    //[12]
    private void cancelar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar
        limpiarCampos();
    }//GEN-LAST:event_cancelar

    private void obtenerGrados(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_obtenerGrados
        // TODO add your handling code here:

        limpiarCampos();
        ControlGrupo Cgrupo = new ControlGrupo();
        try {
            ResultSet obtenerGrados = Cgrupo.obtenerGrupos();

            String grado = "";

            while (obtenerGrados.next()) {
                grado = obtenerGrados.getObject(1).toString();
                int totalGrado = cbox1Grado.getItemCount();
                int maximo = 0;

                for (int i = 0; i < totalGrado; i++) {
                    if (grado.compareTo(cbox1Grado.getItemAt(i).toString()) == 0) {
                        maximo++;

                    }
                }
                if (maximo == 0) {
                    this.cbox1Grado.addItem(grado);
                }

            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println("Error al intentar obtener datos a la bd");
        }
    }//GEN-LAST:event_obtenerGrados

    private void obtenerGrupos(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obtenerGrupos
        cbox2Grupo.removeAllItems();
        cbox2Grupo.addItem("Seleccione una opción");
        ControlGrupo Cgrupo = new ControlGrupo();
        try {
            ResultSet obtenerGrupos = Cgrupo.obtenerGrupos(Integer.parseInt(cbox1Grado.getSelectedItem().toString()));
            System.out.println("seleccione: " + cbox1Grado.getSelectedItem().toString());
            String grupo = "";

            while (obtenerGrupos.next()) {
                grupo = obtenerGrupos.getObject(1).toString();
                this.cbox2Grupo.addItem(grupo);

            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println("Error al intentar obtener datos a la bd");
        } catch (NumberFormatException | NullPointerException ex) {
        }

    }//GEN-LAST:event_obtenerGrupos

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazRegistrarMaestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazRegistrarMaestro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton1Registrar;
    private javax.swing.JButton boton2Salir;
    private javax.swing.JButton boton3Cancelar;
    private javax.swing.JComboBox cbox1Grado;
    private javax.swing.JComboBox cbox2Grupo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jp1RegistrarMaestro;
    private javax.swing.JPanel jp2Usuario;
    private javax.swing.JPanel jp3Grupo;
    private javax.swing.JPanel jp4DatosdelMaestro;
    private javax.swing.JLabel lab1TotaldeMaestros;
    private javax.swing.JLabel lab2NumerodeEmpleado;
    private javax.swing.JLabel lab3NombredelMaestro;
    private javax.swing.JLabel lab4ApellidoPaterno;
    private javax.swing.JLabel lab5ApellidoMaterno;
    private javax.swing.JLabel lab6Grado;
    private javax.swing.JLabel lab7Grupo;
    private javax.swing.JLabel lab8Usuario;
    private javax.swing.JLabel lab9Contraseña;
    private javax.swing.JMenuBar menu1;
    private javax.swing.JTextField txt1NumeroEmpleado;
    private javax.swing.JTextField txt2NombredelMaestro;
    private javax.swing.JTextField txt3ApellidoPaterno;
    private javax.swing.JTextField txt4ApellidoMaterno;
    private javax.swing.JTextField txt5Usuario;
    private javax.swing.JTextField txt6Contraseña;
    // End of variables declaration//GEN-END:variables
}
