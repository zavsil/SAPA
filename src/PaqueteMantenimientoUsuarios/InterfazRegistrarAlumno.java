/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PaqueteMantenimientoUsuarios;

import PaqueteLogin.InterfazLogin;
import com.inet.jortho.FileUserDictionary;
import com.inet.jortho.SpellChecker;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author FRANCISCO ZAVALA SILVA
 */
public class InterfazRegistrarAlumno extends javax.swing.JFrame {

    ControlAlumno alumno = new ControlAlumno();

    /**
     * Creates new form InterfazRegistrarAlumno
     */
    public InterfazRegistrarAlumno() throws ClassNotFoundException, SQLException {
        initComponents();

        //verifica la ortografia
        SpellChecker.setUserDictionaryProvider(new FileUserDictionary());
        SpellChecker.registerDictionaries(null, null);
        SpellChecker.register(txt2NombredelAlumno);
        SpellChecker.register(txt3ApellidoPaterno);
        SpellChecker.register(txt4ApellidoMaterno);

        //establece la posicion central de la interfaz
        this.setLocationRelativeTo(null);

        //coloca el icono en la interfaz
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icono.png")).getImage());

        //cuenta el total de alumnos
        contarAlumnos();
        //desactiva el maximizar
        this.setResizable(false);
        //desactiva el cerrar de la interfaz
        setDefaultCloseOperation(0);
        //asigna el nombre de administrador en la interfaz
        jMenu1.setText("Mi cuenta: ADMINISTRADOR");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp4RegistrarAlumno = new javax.swing.JPanel();
        boton2Salir = new javax.swing.JButton();
        boton1Registrar = new javax.swing.JButton();
        lab1TotaldeAlumnos = new javax.swing.JLabel();
        jp1DatosdelAlumno = new javax.swing.JPanel();
        txt4ApellidoMaterno = new javax.swing.JTextField();
        txt3ApellidoPaterno = new javax.swing.JTextField();
        txt2NombredelAlumno = new javax.swing.JTextField();
        txt1Matricula = new javax.swing.JTextField();
        lab2Matricula = new javax.swing.JLabel();
        lab3NombredelAlumno = new javax.swing.JLabel();
        lab4ApellidoPaterno = new javax.swing.JLabel();
        lab5ApellidoMaterno = new javax.swing.JLabel();
        jp2Grupo = new javax.swing.JPanel();
        lab6Grado1 = new javax.swing.JLabel();
        lab7Grupo1 = new javax.swing.JLabel();
        cbox1Grado = new javax.swing.JComboBox();
        cbox2Grupo = new javax.swing.JComboBox();
        jp3Usuario = new javax.swing.JPanel();
        lab8Usuario1 = new javax.swing.JLabel();
        lab9Contraseña1 = new javax.swing.JLabel();
        txt5Usuario = new javax.swing.JTextField();
        txt6Contraseña = new javax.swing.JTextField();
        boton3Cancelar = new javax.swing.JButton();
        menu1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mantenimiento Usuarios/Registrar Usuario/Registrar Alumno");
        setMinimumSize(new java.awt.Dimension(596, 534));

        jp4RegistrarAlumno.setBackground(new java.awt.Color(245, 245, 239));
        jp4RegistrarAlumno.setToolTipText("");

        boton2Salir.setBackground(new java.awt.Color(255, 255, 255));
        boton2Salir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton2Salir.setText("Salir");
        boton2Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir(evt);
            }
        });

        boton1Registrar.setBackground(new java.awt.Color(51, 204, 0));
        boton1Registrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton1Registrar.setText("Registrar");
        boton1Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrar(evt);
            }
        });

        lab1TotaldeAlumnos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab1TotaldeAlumnos.setText("Total de Alumnos registrados:#00");

        jp1DatosdelAlumno.setBackground(new java.awt.Color(253, 251, 251));
        jp1DatosdelAlumno.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del alumno"));

        txt4ApellidoMaterno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txt3ApellidoPaterno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txt2NombredelAlumno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txt1Matricula.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt1Matricula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                existeAlumno(evt);
            }
        });

        lab2Matricula.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab2Matricula.setText("Matricula:");

        lab3NombredelAlumno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab3NombredelAlumno.setText("Nombre del alumno:");

        lab4ApellidoPaterno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab4ApellidoPaterno.setText("Apellido paterno:");

        lab5ApellidoMaterno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab5ApellidoMaterno.setText("Apellido materno:");

        javax.swing.GroupLayout jp1DatosdelAlumnoLayout = new javax.swing.GroupLayout(jp1DatosdelAlumno);
        jp1DatosdelAlumno.setLayout(jp1DatosdelAlumnoLayout);
        jp1DatosdelAlumnoLayout.setHorizontalGroup(
            jp1DatosdelAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1DatosdelAlumnoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp1DatosdelAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jp1DatosdelAlumnoLayout.createSequentialGroup()
                        .addComponent(lab2Matricula)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt1Matricula, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp1DatosdelAlumnoLayout.createSequentialGroup()
                        .addGroup(jp1DatosdelAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lab4ApellidoPaterno)
                            .addComponent(lab3NombredelAlumno))
                        .addGap(4, 4, Short.MAX_VALUE)
                        .addGroup(jp1DatosdelAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt2NombredelAlumno)
                            .addComponent(txt3ApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jp1DatosdelAlumnoLayout.createSequentialGroup()
                        .addComponent(lab5ApellidoMaterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt4ApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jp1DatosdelAlumnoLayout.setVerticalGroup(
            jp1DatosdelAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1DatosdelAlumnoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp1DatosdelAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab2Matricula, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt1Matricula, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp1DatosdelAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab3NombredelAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2NombredelAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp1DatosdelAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab4ApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt3ApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp1DatosdelAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab5ApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt4ApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jp2Grupo.setBackground(new java.awt.Color(253, 251, 251));
        jp2Grupo.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del grupo"));

        lab6Grado1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab6Grado1.setText("Grado Asignado:");

        lab7Grupo1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab7Grupo1.setText("Grupo Asignado:");

        cbox1Grado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbox1Grado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opción" }));
        cbox1Grado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                obtenerGrados(evt);
            }
        });
        cbox1Grado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obtenerGrupos(evt);
            }
        });

        cbox2Grupo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbox2Grupo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opción" }));

        javax.swing.GroupLayout jp2GrupoLayout = new javax.swing.GroupLayout(jp2Grupo);
        jp2Grupo.setLayout(jp2GrupoLayout);
        jp2GrupoLayout.setHorizontalGroup(
            jp2GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2GrupoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp2GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lab6Grado1)
                    .addComponent(lab7Grupo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp2GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbox1Grado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbox2Grupo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jp2GrupoLayout.setVerticalGroup(
            jp2GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2GrupoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp2GrupoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbox1Grado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jp2GrupoLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(cbox2Grupo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp2GrupoLayout.createSequentialGroup()
                        .addComponent(lab6Grado1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lab7Grupo1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jp3Usuario.setBackground(new java.awt.Color(253, 251, 251));
        jp3Usuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del usuario"));

        lab8Usuario1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab8Usuario1.setText("Usuario:");

        lab9Contraseña1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab9Contraseña1.setText("Contraseña:");

        txt5Usuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt5Usuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                existeUsuario(evt);
            }
        });

        txt6Contraseña.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jp3UsuarioLayout = new javax.swing.GroupLayout(jp3Usuario);
        jp3Usuario.setLayout(jp3UsuarioLayout);
        jp3UsuarioLayout.setHorizontalGroup(
            jp3UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3UsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp3UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp3UsuarioLayout.createSequentialGroup()
                        .addComponent(lab8Usuario1)
                        .addGap(93, 93, 93)
                        .addComponent(txt5Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp3UsuarioLayout.createSequentialGroup()
                        .addComponent(lab9Contraseña1)
                        .addGap(68, 68, 68)
                        .addComponent(txt6Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp3UsuarioLayout.setVerticalGroup(
            jp3UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3UsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp3UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab8Usuario1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt5Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp3UsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab9Contraseña1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt6Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        boton3Cancelar.setBackground(new java.awt.Color(255, 255, 255));
        boton3Cancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton3Cancelar.setText("Cancelar");
        boton3Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar(evt);
            }
        });

        javax.swing.GroupLayout jp4RegistrarAlumnoLayout = new javax.swing.GroupLayout(jp4RegistrarAlumno);
        jp4RegistrarAlumno.setLayout(jp4RegistrarAlumnoLayout);
        jp4RegistrarAlumnoLayout.setHorizontalGroup(
            jp4RegistrarAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp4RegistrarAlumnoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp4RegistrarAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lab1TotaldeAlumnos)
                    .addGroup(jp4RegistrarAlumnoLayout.createSequentialGroup()
                        .addGroup(jp4RegistrarAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jp4RegistrarAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(boton1Registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(boton3Cancelar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(boton2Salir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jp4RegistrarAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jp2Grupo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jp1DatosdelAlumno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jp3Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jp4RegistrarAlumnoLayout.setVerticalGroup(
            jp4RegistrarAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp4RegistrarAlumnoLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lab1TotaldeAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp4RegistrarAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp4RegistrarAlumnoLayout.createSequentialGroup()
                        .addComponent(boton1Registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton3Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton2Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jp4RegistrarAlumnoLayout.createSequentialGroup()
                        .addComponent(jp1DatosdelAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jp2Grupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jp3Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        menu1.setBackground(new java.awt.Color(255, 255, 255));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mi cuenta.png"))); // NOI18N
        jMenu1.setText("Mi cuenta");
        jMenu1.setToolTipText("");
        menu1.add(jMenu1);

        setJMenuBar(menu1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp4RegistrarAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp4RegistrarAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //[11] cierra la interfaz
    private void salir(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir
        int salir = JOptionPane.showConfirmDialog(rootPane, "SEGURO DESEA SALIR?");
        if (salir == 0) {
            limpiarCampos();
            this.setVisible(false);

        }

    }//GEN-LAST:event_salir

    //[5] valida que el texto no contenga numeros
    public boolean esCadena(String texto, String mensaje) {
        //identificar si el nombre del maestro es correcto
        boolean resultado = false;
        int contadordeNumeros = 0;
        String numerosAcomparar[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "0"};

        for (int j = 0; j < numerosAcomparar.length; j++) {
            if (texto.contains(numerosAcomparar[j])) {
                contadordeNumeros++;
            }
        }
        if (contadordeNumeros != 0) {
            JOptionPane.showMessageDialog(rootPane, mensaje, "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            resultado = true;
        }

        return resultado;
    }

    //[6] verifica la longitud de la cadena si es mayor e igual a 5
    public boolean esMayor(String texto) {
        boolean resultado = false;

        if (texto.length() >= 5) {
            resultado = true;
        }
        return resultado;
    }

    //[1]cuenta el total de alumnos en la base de datos
    public void contarAlumnos() throws ClassNotFoundException, SQLException {

        String totaldeAlumnos = alumno.contarTotalAlumnos();
        lab1TotaldeAlumnos.setText("Total de alumnos registrados: #" + (totaldeAlumnos));
    }

    //[4] valida los datos a registrar
    private void registrar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrar
        boolean matricula = false, nombre = false, apellidoPaterno = false, apellidoMaterno = false, usuario = false, contraseña = false;
        //comparando si lo que se ha ingresado tiene una longitud distinta de 0
        if (txt1Matricula.getText().length() != 0
                && txt2NombredelAlumno.getText().length() != 0
                && txt3ApellidoPaterno.getText().length() != 0
                && txt4ApellidoMaterno.getText().length() != 0
                && txt5Usuario.getText().length() != 0
                && txt6Contraseña.getText().length() != 0
                && cbox1Grado.getSelectedIndex() != 0
                && cbox2Grupo.getSelectedIndex() != 0) {

            //identificar si el numero del maestro es correcto
            try {
                if (Integer.parseInt(txt1Matricula.getText()) > 0) {
                    matricula = true;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "LA MATRICULA ES INCORRECTA", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

            //identificar si los datos del maestro son correcto
            nombre = esCadena(txt2NombredelAlumno.getText(), "EL NOMBRE DEL ALUMNO ES INCORRECTO");
            apellidoPaterno = esCadena(txt3ApellidoPaterno.getText(), "EL APELLIDO PATERNO DEL ALUMNO ES INCORRECTO");
            apellidoMaterno = esCadena(txt4ApellidoMaterno.getText(), "EL APELLIDO MATERNO DEL ALUMNI ES INCORRECTO");
            usuario = esCadena(txt5Usuario.getText(), "EL USUARIO ES INCORRECTO: SOLO PUEDE CONTENER LETRAS");
            usuario = esMayor(txt5Usuario.getText());
            if (usuario == false) {
                JOptionPane.showMessageDialog(rootPane, "USUARIO MUY CORTO: MINIMO 5 CARACTERES", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            contraseña = esMayor(txt6Contraseña.getText());
            if (contraseña == false) {
                JOptionPane.showMessageDialog(rootPane, "CONTRASEÑA MUY CORTA: MINIMO 5 CARACTERES", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

            //revisa si el texto ingresado contiene exclusivamente letras
            if (esTextoPuro(txt2NombredelAlumno.getText()) == true
                    && esTextoPuro(txt3ApellidoPaterno.getText()) == true
                    && esTextoPuro(txt4ApellidoMaterno.getText()) == true) {

                if (matricula == true && nombre == true && apellidoPaterno == true && apellidoMaterno == true && usuario == true && contraseña == true) {
                    int correcto = JOptionPane.showConfirmDialog(rootPane, "TODO ESTA CORRECTO?", "FELICIDADES", JOptionPane.YES_NO_OPTION);

                    //envia a control maestro para el registro
                    if (correcto == 0) {

                        ControlAlumno alumnoC = new ControlAlumno();
                        ControlGrupo grupoC = new ControlGrupo();
                        ControlUsuario usuarioC = new ControlUsuario();
                        try {

                            //registro de maestro
                            alumnoC.registrar(txt1Matricula.getText(), txt2NombredelAlumno.getText(), txt3ApellidoPaterno.getText(), txt4ApellidoMaterno.getText());
                            //registro de usuario
                            usuarioC.registrarUsuarioAlumno(txt1Matricula.getText(), txt5Usuario.getText(), txt6Contraseña.getText());
                            //registro de grupo
                            grupoC.registrarAlumnoalGrupo(Integer.parseInt(cbox1Grado.getSelectedItem().toString()), cbox2Grupo.getSelectedItem().toString(), txt1Matricula.getText());

                            JOptionPane.showMessageDialog(rootPane, "REGISTRO EXITOSO", "FELICIDADES", JOptionPane.WARNING_MESSAGE);

                        } catch (SQLException ex) {
                            Logger.getLogger(InterfazRegistrarAlumno.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(InterfazRegistrarAlumno.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        //limpia los campos
                        limpiarCampos();
                        try {
                            contarAlumnos();
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(InterfazRegistrarAlumno.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (SQLException ex) {
                            Logger.getLogger(InterfazRegistrarAlumno.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }

                }
//
            } else {
                String mensaje = "";
                mensaje = datosACorregir();
                JOptionPane.showMessageDialog(rootPane, "REVISAR LOS SIGUIENTES CAMPOS:\n" + mensaje + "", "ERROR", JOptionPane.ERROR_MESSAGE);

            }
        } else {

            String mensaje = datosPorIngresar();

            JOptionPane.showMessageDialog(rootPane, "INGRESE LOS SIGUIENTES CAMPOS:\n" + mensaje + "", "ERROR", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_registrar

    //[9] indica los datos que faltan ingresar
    public String datosPorIngresar() {
        String mensaje = "";

        if (txt1Matricula.getText().length() <= 0) {
            mensaje = mensaje + "-Matricula\n";
        }
        if (txt2NombredelAlumno.getText().length() <= 0) {
            mensaje = mensaje + "-Nombre del alumno\n";
        }
        if (txt3ApellidoPaterno.getText().length() <= 0) {
            mensaje = mensaje + "-Apellido Paterno\n";
        }
        if (txt4ApellidoMaterno.getText().length() <= 0) {
            mensaje = mensaje + "-Apellido Materno\n";
        }
        if (cbox1Grado.getSelectedIndex() <= 0) {
            mensaje = mensaje + "-Grado\n";
        }
        if (cbox2Grupo.getSelectedIndex() <= 0) {
            mensaje = mensaje + "-Grupo\n";
        }
        if (txt5Usuario.getText().length() <= 0) {
            mensaje = mensaje + "-Usuario\n";
        }
        if (txt6Contraseña.getText().length() <= 0) {
            mensaje = mensaje + "-Contraseña\n";
        }
        return mensaje;
    }

    //[8]indican los datos que hay que corregir
    public String datosACorregir() {
        String mensaje = "";

        if (!esTextoPuro(txt2NombredelAlumno.getText())) {
            mensaje = mensaje + "-Nombre del alumno\n";
        }
        if (!esTextoPuro(txt3ApellidoPaterno.getText())) {
            mensaje = mensaje + "-Apellido Paterno\n";
        }
        if (!esTextoPuro(txt4ApellidoMaterno.getText())) {
            mensaje = mensaje + "-Apellido Materno\n";
        }
        if (!esTextoPuro(txt5Usuario.getText())) {
            mensaje = mensaje + "-Usuario\n";
        }
        if (!esTextoPuro(txt6Contraseña.getText())) {
            mensaje = mensaje + "-Contraseña\n";
        }

        return mensaje;
    }

    //[7]valida que el texto contenga solo letras
    public boolean esTextoPuro(String texto) {
        boolean resultado = false;

        for (int i = 0; i < texto.length(); i++) {

            if (((int) texto.charAt(i) >= 65 && (int) texto.charAt(i) <= 90) || ((int) texto.charAt(i) >= 97 && (int) texto.charAt(i) <= 122)) {
                resultado = true;
            } else {
                return false;
            }

        }

        return resultado;
    }

    //[2]metodo que busca si existe la matricula del alumno en la base de datos 
    // si existe muetsra un mensaje de error
    private void existeAlumno(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_existeAlumno
        //saber si el maestro ya existe
        String existe = "";
        try {
            ControlAlumno alumnoC = new ControlAlumno();
            ResultSet resultadodeConsultar = alumnoC.consultar(txt1Matricula.getText());

            while (resultadodeConsultar.next()) {

                existe = (resultadodeConsultar.getObject(1).toString());

            }//find el while

            if (existe.length() > 0) {
                JOptionPane.showMessageDialog(rootPane, "MATRICULA YA EXISTE", "ERROR", JOptionPane.ERROR_MESSAGE);
                limpiarCampos();
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(InterfazRegistrarAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(rootPane, "MATRICULA NO VALIDA", "ERROR", JOptionPane.ERROR_MESSAGE);
            System.out.println("NUMERO NO VALIDO " + ex.toString());
        }


    }//GEN-LAST:event_existeAlumno

    //[3]metodo que busca si existe el usuario ingresado en la base de datos
    //si existe muestra mensaje de error
    private void existeUsuario(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_existeUsuario
        String existe = "";
        try {
            ControlUsuario usuarioC = new ControlUsuario();
            ResultSet resultadodeConsultar = usuarioC.consultarNombreUsuario(txt5Usuario.getText());

            while (resultadodeConsultar.next()) {

                existe = (resultadodeConsultar.getObject(1).toString());

            }//find el while

            if (existe.length() > 0) {
                JOptionPane.showMessageDialog(rootPane, "NOMBRE DE USUARIO YA EXISTE", "ERROR", JOptionPane.ERROR_MESSAGE);
                limpiarCampos();
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(InterfazRegistrarAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(rootPane, "NOMBRE DE USUARIO NO VALIDO", "ERROR", JOptionPane.ERROR_MESSAGE);

            System.out.println("NOMBRE DE USUARIO NO VALIDO " + ex.toString());
        }

    }//GEN-LAST:event_existeUsuario

    //[10]
    private void cancelar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar
        limpiarCampos();
    }//GEN-LAST:event_cancelar

    private void obtenerGrados(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_obtenerGrados
        // TODO add your handling code here:

        limpiarCampos();
        ControlGrupo Cgrupo = new ControlGrupo();
        try {
            ResultSet obtenerGrados = Cgrupo.obtenerGrupos();

            String grado = "";

            while (obtenerGrados.next()) {
                grado = obtenerGrados.getObject(1).toString();
                int totalGrado = cbox1Grado.getItemCount();
                int maximo = 0;

                for (int i = 0; i < totalGrado; i++) {
                    if (grado.compareTo(cbox1Grado.getItemAt(i).toString()) == 0) {
                        maximo++;

                    }
                }
                if (maximo == 0) {
                    this.cbox1Grado.addItem(grado);
                }

            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println("Error al intentar obtener datos a la bd");
        }
    }//GEN-LAST:event_obtenerGrados

    private void obtenerGrupos(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obtenerGrupos
        cbox2Grupo.removeAllItems();
        cbox2Grupo.addItem("Seleccione una opción");
        ControlGrupo Cgrupo = new ControlGrupo();
        try {
            ResultSet obtenerGrupos = Cgrupo.obtenerGrupos(Integer.parseInt(cbox1Grado.getSelectedItem().toString()));
            System.out.println("seleccione: " + cbox1Grado.getSelectedItem().toString());
            String grupo = "";

            while (obtenerGrupos.next()) {
                grupo = obtenerGrupos.getObject(1).toString();
                this.cbox2Grupo.addItem(grupo);

            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println("Error al intentar obtener datos a la bd");
        } catch (NumberFormatException | NullPointerException ex) {
        }
    }//GEN-LAST:event_obtenerGrupos

    //[12] limpia los campos de la interfaz
    public void limpiarCampos() {
        txt1Matricula.setText("");
        txt2NombredelAlumno.setText("");
        txt3ApellidoPaterno.setText("");
        txt4ApellidoMaterno.setText("");
        txt5Usuario.setText("");
        txt6Contraseña.setText("");
        cbox1Grado.setSelectedIndex(0);
        cbox2Grupo.setSelectedIndex(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazRegistrarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazRegistrarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazRegistrarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazRegistrarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new InterfazRegistrarAlumno().setVisible(true);
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(InterfazRegistrarAlumno.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton1Registrar;
    private javax.swing.JButton boton2Salir;
    private javax.swing.JButton boton3Cancelar;
    private javax.swing.JComboBox cbox1Grado;
    private javax.swing.JComboBox cbox2Grupo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jp1DatosdelAlumno;
    private javax.swing.JPanel jp2Grupo;
    private javax.swing.JPanel jp3Usuario;
    private javax.swing.JPanel jp4RegistrarAlumno;
    private javax.swing.JLabel lab1TotaldeAlumnos;
    private javax.swing.JLabel lab2Matricula;
    private javax.swing.JLabel lab3NombredelAlumno;
    private javax.swing.JLabel lab4ApellidoPaterno;
    private javax.swing.JLabel lab5ApellidoMaterno;
    private javax.swing.JLabel lab6Grado1;
    private javax.swing.JLabel lab7Grupo1;
    private javax.swing.JLabel lab8Usuario1;
    private javax.swing.JLabel lab9Contraseña1;
    private javax.swing.JMenuBar menu1;
    private javax.swing.JTextField txt1Matricula;
    private javax.swing.JTextField txt2NombredelAlumno;
    private javax.swing.JTextField txt3ApellidoPaterno;
    private javax.swing.JTextField txt4ApellidoMaterno;
    private javax.swing.JTextField txt5Usuario;
    private javax.swing.JTextField txt6Contraseña;
    // End of variables declaration//GEN-END:variables
}
