/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PaqueteMantenimientodeReactivos;

import PaqueteLogin.InterfazLogin;
import PaqueteMantenimientoUsuarios.ControlGrupo;
import PaqueteMantenimientodeMaterias.ControlMateria;
import java.awt.event.ActionEvent;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FRANCISCO ZAVALA SILVA
 */
public class InterfazEliminarReactivos extends javax.swing.JFrame {

    int contarTotalReactivos;
    boolean materiaSeleccionada = false;
    boolean gradoSeleccionado = false;
    public int idUsuario;
    public String nombre;

    /**
     * Creates new form InterfazEliminarReactivos
     */
    public InterfazEliminarReactivos() {
        initComponents();
        //establece la posicion central de la interfaz
        this.setLocationRelativeTo(null);

        //coloca el icono en la interfaz
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icono.png")).getImage());
        //desactiva el boton maximizar
        this.setResizable(false);
        //desactiva el boton cerrar
        setDefaultCloseOperation(0);

//        //activa el boton consultar
//        boton1Consultar.setEnabled(true);
//        //desactiva el boton eliminar
//        boton2Eliminar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp1EliminarReactivos = new javax.swing.JPanel();
        jp2DatosReactivo = new javax.swing.JPanel();
        lab2Materia = new javax.swing.JLabel();
        cbox1Materia = new javax.swing.JComboBox();
        cbox2Grado = new javax.swing.JComboBox();
        lab3Grado = new javax.swing.JLabel();
        lab4Tema = new javax.swing.JLabel();
        cbox3Tema = new javax.swing.JComboBox();
        lab1TotaldeReactivos = new javax.swing.JLabel();
        boton2Eliminar = new javax.swing.JButton();
        boton4Cancelar = new javax.swing.JButton();
        jp3Reactivos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1Reactivos = new javax.swing.JTable();
        boton1Consultar = new javax.swing.JButton();
        boton3Salir1 = new javax.swing.JButton();
        menu1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MantenimientoDeReactivos/EliminarReactivos");
        setMinimumSize(new java.awt.Dimension(927, 563));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                personalizarInterfaz(evt);
            }
        });

        jp1EliminarReactivos.setBackground(new java.awt.Color(245, 245, 239));
        jp1EliminarReactivos.setMaximumSize(new java.awt.Dimension(893, 685));
        jp1EliminarReactivos.setMinimumSize(new java.awt.Dimension(893, 685));

        jp2DatosReactivo.setBackground(new java.awt.Color(253, 251, 251));
        jp2DatosReactivo.setBorder(javax.swing.BorderFactory.createTitledBorder("Informaci贸n del reactivo"));

        lab2Materia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab2Materia.setText("Materia:");

        cbox1Materia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbox1Materia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opci贸n" }));
        cbox1Materia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                buscarMaterias(evt);
            }
        });
        cbox1Materia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                materiaSeleccionada(evt);
            }
        });

        cbox2Grado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbox2Grado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opci贸n" }));
        cbox2Grado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                obtenerGrados(evt);
            }
        });
        cbox2Grado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradoSeleccionado(evt);
            }
        });

        lab3Grado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab3Grado.setText("Grado:");

        lab4Tema.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab4Tema.setText("Tema:");

        cbox3Tema.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbox3Tema.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opci贸n" }));

        lab1TotaldeReactivos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab1TotaldeReactivos.setText("Total de reactivos: #0");

        javax.swing.GroupLayout jp2DatosReactivoLayout = new javax.swing.GroupLayout(jp2DatosReactivo);
        jp2DatosReactivo.setLayout(jp2DatosReactivoLayout);
        jp2DatosReactivoLayout.setHorizontalGroup(
            jp2DatosReactivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2DatosReactivoLayout.createSequentialGroup()
                .addGroup(jp2DatosReactivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lab2Materia)
                    .addComponent(lab3Grado)
                    .addComponent(lab4Tema))
                .addGap(18, 18, 18)
                .addGroup(jp2DatosReactivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp2DatosReactivoLayout.createSequentialGroup()
                        .addComponent(cbox3Tema, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jp2DatosReactivoLayout.createSequentialGroup()
                        .addGroup(jp2DatosReactivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbox1Materia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbox2Grado, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lab1TotaldeReactivos)
                        .addGap(35, 35, 35))))
        );
        jp2DatosReactivoLayout.setVerticalGroup(
            jp2DatosReactivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2DatosReactivoLayout.createSequentialGroup()
                .addGroup(jp2DatosReactivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab2Materia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox1Materia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lab1TotaldeReactivos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp2DatosReactivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab3Grado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox2Grado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp2DatosReactivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab4Tema, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox3Tema, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        boton2Eliminar.setBackground(new java.awt.Color(255, 255, 255));
        boton2Eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton2Eliminar.setText("Eliminar");
        boton2Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar(evt);
            }
        });

        boton4Cancelar.setBackground(new java.awt.Color(255, 255, 255));
        boton4Cancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton4Cancelar.setText("Cancelar");
        boton4Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar(evt);
            }
        });

        jp3Reactivos.setBackground(new java.awt.Color(253, 251, 251));
        jp3Reactivos.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccione el reactivo a eliminar"));

        table1Reactivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N煤mero de lista", "Descripci贸n del reactivo", "Respuesta correcta", "Respuesta Incorrecta 1", "Respuesta Incorrecta 2", "Check"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table1Reactivos);
        if (table1Reactivos.getColumnModel().getColumnCount() > 0) {
            table1Reactivos.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        javax.swing.GroupLayout jp3ReactivosLayout = new javax.swing.GroupLayout(jp3Reactivos);
        jp3Reactivos.setLayout(jp3ReactivosLayout);
        jp3ReactivosLayout.setHorizontalGroup(
            jp3ReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp3ReactivosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jp3ReactivosLayout.setVerticalGroup(
            jp3ReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3ReactivosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        boton1Consultar.setBackground(new java.awt.Color(255, 255, 51));
        boton1Consultar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton1Consultar.setText("Consultar");
        boton1Consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultar(evt);
            }
        });

        boton3Salir1.setBackground(new java.awt.Color(255, 255, 255));
        boton3Salir1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton3Salir1.setText("Salir");
        boton3Salir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir(evt);
            }
        });

        javax.swing.GroupLayout jp1EliminarReactivosLayout = new javax.swing.GroupLayout(jp1EliminarReactivos);
        jp1EliminarReactivos.setLayout(jp1EliminarReactivosLayout);
        jp1EliminarReactivosLayout.setHorizontalGroup(
            jp1EliminarReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp1EliminarReactivosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp1EliminarReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(boton2Eliminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton4Cancelar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton1Consultar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(boton3Salir1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp1EliminarReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jp3Reactivos, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jp2DatosReactivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jp1EliminarReactivosLayout.setVerticalGroup(
            jp1EliminarReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1EliminarReactivosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(boton1Consultar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boton2Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boton4Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boton3Salir1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(556, 556, 556))
            .addGroup(jp1EliminarReactivosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jp2DatosReactivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jp3Reactivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menu1.setBackground(new java.awt.Color(255, 255, 255));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mi cuenta.png"))); // NOI18N
        jMenu1.setToolTipText("");
        menu1.add(jMenu1);

        setJMenuBar(menu1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp1EliminarReactivos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp1EliminarReactivos, javax.swing.GroupLayout.PREFERRED_SIZE, 588, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //[8] limpia todos los campos
    private void cancelar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar
        cbox1Materia.setSelectedIndex(0);
        cbox2Grado.setSelectedIndex(0);
        cbox3Tema.removeAllItems();
        cbox3Tema.addItem("Seleccione una opci贸n");
//        boton1Consultar.setEnabled(true);
//        boton2Eliminar.setEnabled(false);

    }//GEN-LAST:event_cancelar

    //[2] verifica si se ha seleccionado la materia
    private void materiaSeleccionada(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_materiaSeleccionada
        limpiarReactivos();
        if (cbox1Materia.getSelectedIndex() != 0) {
            materiaSeleccionada = true;
            obtenerTemas();

        } else {
            materiaSeleccionada = false;
            obtenerTemas();
        }
        lab1TotaldeReactivos.setText("Total de reactivos: #0");
    }//GEN-LAST:event_materiaSeleccionada

    //[3] verifica si se ha seleccionado el grado
    private void gradoSeleccionado(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradoSeleccionado
        limpiarReactivos();
        if (cbox2Grado.getSelectedIndex() != 0) {
            gradoSeleccionado = true;
            obtenerTemas();

        } else {
            gradoSeleccionado = false;
            obtenerTemas();
        }
        lab1TotaldeReactivos.setText("Total de reactivos: #0");
    }//GEN-LAST:event_gradoSeleccionado

    //[5]consulta los reactivos segun la materia, tema y grado
    private void consultar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultar
        lab1TotaldeReactivos.setText("Total de reactivos: #0");

        if (materiaSeleccionada && gradoSeleccionado) {
            limpiarReactivos();
            ControlReactivo reactivo = new ControlReactivo();

            try {
                System.out.println(cbox1Materia.getSelectedIndex() + " " + cbox3Tema.getItemAt(cbox3Tema.getSelectedIndex()).toString() + " " + (cbox2Grado.getSelectedIndex() + 2));
                ResultSet consultar = reactivo.consultarReactivos(cbox1Materia.getSelectedIndex(), cbox3Tema.getItemAt(cbox3Tema.getSelectedIndex()).toString(), (cbox2Grado.getSelectedIndex() + 2));

                llenarReactivos(consultar);
                boton4Cancelar.setFocusCycleRoot(true);
//                boton1Consultar.setEnabled(false);
//                boton2Eliminar.setEnabled(true);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(InterfazEliminarReactivos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "SELECCIONA LA MATERIA Y EL GRADO", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_consultar

    //[7] elimina el reactivo seleccionado
    private void eliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar
        try {

//obtenemos los reactivos a eliminar y el total de ellos
            int totalreactivos = 0;
            int eliminar[] = new int[table1Reactivos.getRowCount()];
            for (int i = 0; i < table1Reactivos.getRowCount(); i++) {
                String var = String.valueOf(table1Reactivos.getValueAt(i, 5));
                if (var.equalsIgnoreCase("true")) {
                    eliminar[i] = i;
                    totalreactivos++;

                } else {
                    eliminar[i] = -1;
                }

            }

            if (totalreactivos > 0) {
                int respuesta = JOptionPane.showConfirmDialog(rootPane, "SEGURO DESEA ELIMINAR EL/LOS REACTIVO/S?", "ALERTA", JOptionPane.YES_NO_CANCEL_OPTION);

                if (respuesta == 0) {
                    String eliminados = "Se ha eliminado el reactivo:\n";
                    String noEliminados = "No se ha eliminado el reactivo\n por no ser el creador de el:\n";
                    for (int i = 0; i < eliminar.length; i++) {

                        ControlReactivo reactivo = new ControlReactivo();

                        try {
                            while (eliminar[i] == -1) {
                                i++;

                            }

                            int resultadoIdUsuario = reactivo.obtenerCreadordelReactivo(
                                    table1Reactivos.getValueAt(eliminar[i], 1).toString(),
                                    table1Reactivos.getValueAt(eliminar[i], 2).toString(),
                                    table1Reactivos.getValueAt(eliminar[i], 3).toString(),
                                    table1Reactivos.getValueAt(eliminar[i], 4).toString()
                            );

                            String descripcionReactivo = table1Reactivos.getValueAt(eliminar[i], 1).toString();

                            //valida que el usuario haya creado el reactivo
                            if (resultadoIdUsuario == idUsuario) {
                                reactivo.eliminar(descripcionReactivo);
                                eliminados = eliminados + " " + (i + 1) + "\n";

                            } else {
                                noEliminados = noEliminados + " " + (i + 1) + "\n";
                            }

                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(InterfazEliminarReactivos.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (SQLException ex) {
                            Logger.getLogger(InterfazEliminarReactivos.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }//fin del for
                    JOptionPane.showMessageDialog(rootPane, eliminados + noEliminados, "ALERTA", JOptionPane.OK_OPTION);
                    ActionEvent evento = null;
                    limpiarReactivos();
                    consultar(evento);
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "SELECCIONA EL/LOS REACTIVO/S A ELIMINAR", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(rootPane, "SELECCIONA EL/LOS REACTIVO/S A ELIMINAR", "ERROR", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_eliminar

    //[1] mostrar el nombre y el id del usuario
    private void personalizarInterfaz(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_personalizarInterfaz
        jMenu1.setText("Mi cuenta: " + nombre + " : " + idUsuario);
    }//GEN-LAST:event_personalizarInterfaz

    //[9] cierra la interfaz
    private void salir(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir
        int salir = JOptionPane.showConfirmDialog(rootPane, "SEGURO DESEA SALIR?");
        if (salir == 0) {
            limpiarReactivos();
            cbox1Materia.setSelectedIndex(0);
            cbox2Grado.setSelectedIndex(0);
            cbox3Tema.removeAllItems();
            cbox3Tema.addItem("Seleccione una opci贸n");
//            boton1Consultar.setEnabled(true);
//            boton2Eliminar.setEnabled(false);
            this.setVisible(false);

        }


    }//GEN-LAST:event_salir

    public void limpiarCampos() {

        cbox1Materia.removeAllItems();
        cbox1Materia.addItem("Seleccione una opci贸n");

        cbox2Grado.removeAllItems();
        cbox2Grado.addItem("Seleccione una opci贸n");

        cbox3Tema.removeAllItems();
        cbox3Tema.addItem("Seleccione una opci贸n");

        limpiarReactivos();

    }

    private void buscarMaterias(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscarMaterias
        // TODO add your handling code here:
        limpiarCampos();
        ControlMateria cMateria = new ControlMateria();
        try {
            ResultSet obtenerMaterias = cMateria.obtenerMaterias();

            while (obtenerMaterias.next()) {
                cbox1Materia.addItem(obtenerMaterias.getObject(1));
            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println(ex);
        }


    }//GEN-LAST:event_buscarMaterias

    private void obtenerGrados(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_obtenerGrados
        // TODO add your handling code here:
        ControlGrupo Cgrupo = new ControlGrupo();
        try {
            ResultSet obtenerGrados = Cgrupo.obtenerGrupos();

            String grado = "";

            while (obtenerGrados.next()) {
                grado = obtenerGrados.getObject(1).toString();
                int totalGrado = cbox2Grado.getItemCount();
                int maximo = 0;

                for (int i = 0; i < totalGrado; i++) {
                    if (grado.compareTo(cbox2Grado.getItemAt(i).toString()) == 0) {
                        maximo++;

                    }
                }
                if (maximo == 0) {
                    this.cbox2Grado.addItem(grado);
                }

            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println("Error al intentar obtener datos a la bd");
        }


    }//GEN-LAST:event_obtenerGrados

    //[6] muestra todos los reactivos relacionados
    public void llenarReactivos(ResultSet conjuntoResultados) throws ClassNotFoundException, SQLException {
        int posicion = 0;
        DefaultTableModel modelo = (DefaultTableModel) table1Reactivos.getModel();

        while (conjuntoResultados.next()) {
            modelo.addRow(new Object[]{
                (posicion + 1),
                conjuntoResultados.getObject(1).toString(),
                conjuntoResultados.getObject(2).toString(),
                conjuntoResultados.getObject(3).toString(),
                conjuntoResultados.getObject(4).toString(),});
            posicion++;
        }

        contarTotalReactivos = posicion;
        lab1TotaldeReactivos.setText("Total de reactivos: #" + contarTotalReactivos);

    }

    //[10] limpia la tabla de los reactivos
    public void limpiarReactivos() {
        // TODO add your handling code here:
        try {

            DefaultTableModel modelo = (DefaultTableModel) table1Reactivos.getModel();
            int total = table1Reactivos.getRowCount();
            for (int i = 0; i < total; i++) {
                modelo.removeRow(0);
            }

        } catch (NumberFormatException e) {
            System.out.println(e.toString());
        }

    }

    //[4] obtiene y muestra los temas segun la materi ay el grado
    public void obtenerTemas() {
        cbox3Tema.removeAllItems();
        cbox3Tema.addItem("Seleccione una opci贸n");

        ControlTema temaC = new ControlTema();
        if (materiaSeleccionada && gradoSeleccionado) {
            try {

                ResultSet resultado = temaC.consultarTemas((cbox1Materia.getSelectedIndex()), (cbox2Grado.getSelectedIndex() + 2));

                while (resultado.next()) {

                    cbox3Tema.addItem(resultado.getObject(1));

                }

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(InterfazEliminarReactivos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            cbox3Tema.removeAllItems();
            cbox3Tema.addItem("Seleccione una opci贸n");
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazEliminarReactivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazEliminarReactivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazEliminarReactivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazEliminarReactivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazEliminarReactivos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton1Consultar;
    private javax.swing.JButton boton2Eliminar;
    private javax.swing.JButton boton3Salir1;
    private javax.swing.JButton boton4Cancelar;
    private javax.swing.JComboBox cbox1Materia;
    private javax.swing.JComboBox cbox2Grado;
    private javax.swing.JComboBox cbox3Tema;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jp1EliminarReactivos;
    private javax.swing.JPanel jp2DatosReactivo;
    private javax.swing.JPanel jp3Reactivos;
    private javax.swing.JLabel lab1TotaldeReactivos;
    private javax.swing.JLabel lab2Materia;
    private javax.swing.JLabel lab3Grado;
    private javax.swing.JLabel lab4Tema;
    private javax.swing.JMenuBar menu1;
    private javax.swing.JTable table1Reactivos;
    // End of variables declaration//GEN-END:variables
}
