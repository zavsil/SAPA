/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PaqueteMantenimientodeEvaluaciones;

import PaqueteLogin.InterfazLogin;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author FRANCISCO ZAVALA SILVA
 */
public class InterfazIniciarEvaluacion extends javax.swing.JFrame {

    boolean materiaSeleccionada = false;
    boolean evaluacionSeleccionada = false;
    int gradoUsuario = 0;
    String grupoUsuario = null;
    int posicionReactivo = 1;
    String[][] contenedordeReactivos;
    String[][] contenedordeReactivosRevueltos;
    float calificacion = 0;
    int idEvaluacion = 0;
    public int idUsuario;
    public String nombre;
    String texto = "";

    /**
     * Creates new form InterfazIniciarEvaluacion
     *
     * @throws java.sql.SQLException
     * @throws java.lang.ClassNotFoundException
     */
    public InterfazIniciarEvaluacion() throws SQLException, ClassNotFoundException {
        initComponents();
        //establece la posicion central de la interfaz
        this.setLocationRelativeTo(null);

        //coloca el icono en la interfaz
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icono.png")).getImage());
        //desactiva la opcion maximizar
        this.setResizable(false);
        //desactiva la opcion cerrar
        setDefaultCloseOperation(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        txta2Resultado = new javax.swing.JTextArea();
        jp1IniciarEvaluacion = new javax.swing.JPanel();
        jp2InformaciondeEvaluacion = new javax.swing.JPanel();
        lab1Materia = new javax.swing.JLabel();
        lab2Evaluacion = new javax.swing.JLabel();
        cbox1Mteria = new javax.swing.JComboBox();
        cbox2Evaluacion = new javax.swing.JComboBox();
        boton1IniciarEvaluacion = new javax.swing.JButton();
        jp3Reactivos = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txta1Reactivo = new javax.swing.JTextArea();
        lab6A = new javax.swing.JLabel();
        lab7B = new javax.swing.JLabel();
        lab8C = new javax.swing.JLabel();
        boton3Siguiente = new javax.swing.JButton();
        lab5Reactivos = new javax.swing.JLabel();
        lab3Informacion = new javax.swing.JLabel();
        radio1Respuesta1 = new javax.swing.JRadioButton();
        radio3Respuesta3 = new javax.swing.JRadioButton();
        radio2Respuesta2 = new javax.swing.JRadioButton();
        lab4Instrucciones = new javax.swing.JLabel();
        boton2TerminarEvaluacion = new javax.swing.JButton();
        menu1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jitem1 = new javax.swing.JMenuItem();

        jFrame1.setTitle("Resultados de la evaluación:");
        jFrame1.setMaximumSize(new java.awt.Dimension(960, 494));
        jFrame1.setMinimumSize(new java.awt.Dimension(960, 494));
        jFrame1.setPreferredSize(new java.awt.Dimension(960, 494));
        jFrame1.setResizable(false);

        txta2Resultado.setColumns(20);
        txta2Resultado.setRows(5);
        jScrollPane1.setViewportView(txta2Resultado);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                .addContainerGap())
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IniciarEvaluación");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                personalizarInterfaz(evt);
            }
        });

        jp1IniciarEvaluacion.setBackground(new java.awt.Color(245, 245, 239));

        jp2InformaciondeEvaluacion.setBackground(new java.awt.Color(253, 251, 251));
        jp2InformaciondeEvaluacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Información de la evaluación"));

        lab1Materia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab1Materia.setText("Materia:");

        lab2Evaluacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab2Evaluacion.setText("Evaluación:");

        cbox1Mteria.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbox1Mteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opción", "Matemáticas", "Español" }));
        cbox1Mteria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                buscarMaterias(evt);
            }
        });
        cbox1Mteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarEvaluaciones(evt);
            }
        });

        cbox2Evaluacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbox2Evaluacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opción" }));

        javax.swing.GroupLayout jp2InformaciondeEvaluacionLayout = new javax.swing.GroupLayout(jp2InformaciondeEvaluacion);
        jp2InformaciondeEvaluacion.setLayout(jp2InformaciondeEvaluacionLayout);
        jp2InformaciondeEvaluacionLayout.setHorizontalGroup(
            jp2InformaciondeEvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2InformaciondeEvaluacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp2InformaciondeEvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lab1Materia)
                    .addComponent(lab2Evaluacion))
                .addGap(18, 18, 18)
                .addGroup(jp2InformaciondeEvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbox1Mteria, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox2Evaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp2InformaciondeEvaluacionLayout.setVerticalGroup(
            jp2InformaciondeEvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2InformaciondeEvaluacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp2InformaciondeEvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab1Materia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox1Mteria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp2InformaciondeEvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab2Evaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox2Evaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        boton1IniciarEvaluacion.setBackground(new java.awt.Color(51, 204, 0));
        boton1IniciarEvaluacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton1IniciarEvaluacion.setText("Iniciar evaluación");
        boton1IniciarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarEvaluacion(evt);
            }
        });

        jp3Reactivos.setBackground(new java.awt.Color(253, 251, 251));
        jp3Reactivos.setBorder(javax.swing.BorderFactory.createTitledBorder("Evaluación"));

        txta1Reactivo.setEditable(false);
        txta1Reactivo.setColumns(20);
        txta1Reactivo.setRows(5);
        jScrollPane10.setViewportView(txta1Reactivo);

        lab6A.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab6A.setText("A)");

        lab7B.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab7B.setText("B)");

        lab8C.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab8C.setText("C)");

        boton3Siguiente.setText("Guardar >>");
        boton3Siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarResultado(evt);
            }
        });

        lab5Reactivos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab5Reactivos.setText("Reactivo : 0 de 0");

        lab3Informacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab3Informacion.setText("lee cuidadosamente las instrucciones: ");

        radio1Respuesta1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radio1Respuesta1.setText("Respuesta 1");
        radio1Respuesta1.setName(""); // NOI18N

        radio3Respuesta3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radio3Respuesta3.setText("Respuesta 3");

        radio2Respuesta2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radio2Respuesta2.setText("Respuesta 2");
        radio2Respuesta2.setToolTipText("");
        radio2Respuesta2.setName(""); // NOI18N

        lab4Instrucciones.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lab4Instrucciones.setText("para contestar el reactivo tendras que elegir una de las tres opciones y seleccionar \"Guardar\" para ir al siguiente reactivo  ");

        javax.swing.GroupLayout jp3ReactivosLayout = new javax.swing.GroupLayout(jp3Reactivos);
        jp3Reactivos.setLayout(jp3ReactivosLayout);
        jp3ReactivosLayout.setHorizontalGroup(
            jp3ReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3ReactivosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp3ReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jp3ReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lab4Instrucciones))
                    .addComponent(boton3Siguiente)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jp3ReactivosLayout.createSequentialGroup()
                        .addComponent(lab3Informacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lab5Reactivos)
                        .addContainerGap())))
            .addGroup(jp3ReactivosLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jp3ReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jp3ReactivosLayout.createSequentialGroup()
                        .addComponent(lab8C)
                        .addGap(18, 18, 18)
                        .addComponent(radio3Respuesta3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jp3ReactivosLayout.createSequentialGroup()
                        .addComponent(lab6A)
                        .addGap(18, 18, 18)
                        .addComponent(radio1Respuesta1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp3ReactivosLayout.createSequentialGroup()
                        .addComponent(lab7B)
                        .addGap(18, 18, 18)
                        .addComponent(radio2Respuesta2, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jp3ReactivosLayout.setVerticalGroup(
            jp3ReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp3ReactivosLayout.createSequentialGroup()
                .addGroup(jp3ReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab3Informacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lab5Reactivos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lab4Instrucciones, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jp3ReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab6A, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radio1Respuesta1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp3ReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab7B, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radio2Respuesta2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jp3ReactivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab8C, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radio3Respuesta3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(boton3Siguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        boton2TerminarEvaluacion.setBackground(new java.awt.Color(255, 255, 255));
        boton2TerminarEvaluacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton2TerminarEvaluacion.setText("Terminar evaluación");
        boton2TerminarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminarEvaluacion(evt);
            }
        });

        javax.swing.GroupLayout jp1IniciarEvaluacionLayout = new javax.swing.GroupLayout(jp1IniciarEvaluacion);
        jp1IniciarEvaluacion.setLayout(jp1IniciarEvaluacionLayout);
        jp1IniciarEvaluacionLayout.setHorizontalGroup(
            jp1IniciarEvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1IniciarEvaluacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp1IniciarEvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(boton2TerminarEvaluacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(boton1IniciarEvaluacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jp1IniciarEvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jp3Reactivos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jp2InformaciondeEvaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jp1IniciarEvaluacionLayout.setVerticalGroup(
            jp1IniciarEvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1IniciarEvaluacionLayout.createSequentialGroup()
                .addGroup(jp1IniciarEvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp1IniciarEvaluacionLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(boton1IniciarEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(boton2TerminarEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp1IniciarEvaluacionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jp2InformaciondeEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jp3Reactivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menu1.setBackground(new java.awt.Color(255, 255, 255));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mi cuenta.png"))); // NOI18N
        jMenu1.setText("Mi cuenta");
        jMenu1.setToolTipText("");

        jitem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar sesion.png"))); // NOI18N
        jitem1.setText("Cerrar sesión  ");
        jitem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesion(evt);
            }
        });
        jMenu1.add(jitem1);

        menu1.add(jMenu1);

        setJMenuBar(menu1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp1IniciarEvaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp1IniciarEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String obtenerResultadosFinales(int posRespuesta, boolean salir) {
        System.out.println("ESTO ES LO QUE HAY");

        String pregunta = "";
        String respuestaCorrecta = "";
        String respuestaDelAlumno = "";
        if (salir == false) {
            pregunta = ("\n-----------------------------------------------------------------------------------------------"
                    + "\n Pregunta: " + contenedordeReactivos[posicionReactivo - 1][1] + "");
            respuestaCorrecta = ("\n    Respuesta correcta: " + contenedordeReactivos[posicionReactivo - 1][2] + "");
            respuestaDelAlumno = ("\n    Seleccionaste: " + contenedordeReactivosRevueltos[posicionReactivo - 1][posRespuesta]);
            texto = texto + " " + pregunta + " " + respuestaCorrecta + " " + respuestaDelAlumno;
        } else {
            System.out.println("entre");

            jFrame1.setVisible(true);
            jFrame1.setLocationRelativeTo(null);
            txta2Resultado.setText(texto);

        }
        return texto;
    }

    //[9] califica si es correcta o no la respuesta
    public void esRespuestaCorrecta(int posicion) {
        obtenerResultadosFinales(posicion, false);

        if (contenedordeReactivosRevueltos[posicionReactivo - 1][posicion].compareTo(contenedordeReactivos[posicionReactivo - 1][2]) == 0) {
            calificacion = calificacion + Float.parseFloat(contenedordeReactivosRevueltos[posicionReactivo - 1][3]);
        }

    }

    //[8] guarda el resultado y permite ver el reactivo siguiente de la evalaucion
    private void guardarResultado(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarResultado
        try {
            int seleccionados = 0;
            int posicion = -1;
            if (radio1Respuesta1.isSelected()) {
                seleccionados++;
                posicion = 0;
            }
            if (radio2Respuesta2.isSelected()) {
                seleccionados++;
                posicion = 1;
            }
            if (radio3Respuesta3.isSelected()) {
                seleccionados++;
                posicion = 2;
            }
            if (seleccionados == 1) {

                //solo puede continuar si es que existe otro reactivo despues
                if (posicionReactivo < contenedordeReactivos.length) {
                    esRespuestaCorrecta(posicion);
                    radio1Respuesta1.setSelected(false);
                    radio2Respuesta2.setSelected(false);
                    radio3Respuesta3.setSelected(false);
                    posicionReactivo++;
                    lab5Reactivos.setText("Reactivo : " + (posicionReactivo) + " de " + contenedordeReactivos.length);
                    mostrarReactivo();

                    //envia al boton siguiente el texto de guardar quitando >> ya que no hay pregunta que le siga
                    if (posicionReactivo == contenedordeReactivos.length) {
                        boton3Siguiente.setText("Guardar");
                    }
                } else {
                    boton3Siguiente.setEnabled(false);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "SOLO PUEDES ELEGIR UNA RESPUESTA", "ERROR", JOptionPane.OK_OPTION);
                seleccionados = 0;
            }
        } catch (NullPointerException e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_guardarResultado

    //[12] permite terminar y cerrar, califica tu evalaucion
    private void terminarEvaluacion(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminarEvaluacion

        int respuesta = JOptionPane.showConfirmDialog(rootPane, "SEGURO QUIERES TERMINAR LA EVALUACION?", "ERROR", JOptionPane.YES_NO_OPTION);
        if (respuesta == 0) {

            JOptionPane.showMessageDialog(rootPane, "TU CALIFICACION ES DE: " + calificacion, "CALIFICACION", JOptionPane.OK_OPTION);
            obtenerResultadosFinales(0, true);

            boton1IniciarEvaluacion.setEnabled(true);
            boton2TerminarEvaluacion.setEnabled(false);
            ControlEvaluacion evaluacion = new ControlEvaluacion();
            try {

                evaluacion.calificar(idUsuario, idEvaluacion, calificacion);
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(InterfazIniciarEvaluacion.class.getName()).log(Level.SEVERE, null, ex);
            }
            limpiar();
            radio1Respuesta1.setEnabled(false);
            radio2Respuesta2.setEnabled(false);
            radio3Respuesta3.setEnabled(false);
            boton3Siguiente.setEnabled(false);
            calificacion = 0;

        }


    }//GEN-LAST:event_terminarEvaluacion

    //[2] busca las evalauciones indicadas segun  la materia y el grupo y grado
    private void buscarEvaluaciones(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarEvaluaciones
        if (cbox1Mteria.getSelectedIndex() != 0) {
            materiaSeleccionada = true;
            evaluacionSeleccionada = true;

            ControlEvaluacion evaluacion = new ControlEvaluacion();
            ResultSet resultadoConsulta = null;
            try {
                System.out.println("materia: " + cbox1Mteria.getSelectedIndex());
                System.out.println("grupo: " + grupoUsuario);
                System.out.println("grado: " + gradoUsuario);

                ResultSet consultarIdMateriadeEvaluacion = evaluacion.consultarIdMateriadeEvaluacion(cbox1Mteria.getSelectedItem().toString());
                int idMateria = 0;
                while (consultarIdMateriadeEvaluacion.next()) {
                    idMateria = Integer.parseInt(consultarIdMateriadeEvaluacion.getObject(1).toString());
                }
                resultadoConsulta = evaluacion.consultarNombre(idMateria, grupoUsuario, gradoUsuario);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(InterfazIniciarEvaluacion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NullPointerException ex) {
            }
            cbox2Evaluacion.removeAllItems();
            cbox2Evaluacion.addItem("Seleccione una opción");

            try {
                while (resultadoConsulta.next()) {
                    try {
                        cbox2Evaluacion.addItem(resultadoConsulta.getObject(1));
                    } catch (SQLException ex) {
                        Logger.getLogger(InterfazIniciarEvaluacion.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            } catch (SQLException ex) {
                Logger.getLogger(InterfazIniciarEvaluacion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NullPointerException ex) {
            }

        } else {
            materiaSeleccionada = false;
            evaluacionSeleccionada = false;
        }


    }//GEN-LAST:event_buscarEvaluaciones

    //[3] permite iniciar la evaluacion seleccioanda
    private void iniciarEvaluacion(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarEvaluacion
        if (materiaSeleccionada && evaluacionSeleccionada && cbox2Evaluacion.getSelectedItem() != null) {
            try {
                seleccionarEvaluacion();
                posicionReactivo = 1;
                boton1IniciarEvaluacion.setEnabled(false);
                cbox1Mteria.setEnabled(false);
                cbox2Evaluacion.setEnabled(false);
                boton2TerminarEvaluacion.setEnabled(true);
//                valorPorReactivo = 100 / contenedordeReactivos.length;
                radio1Respuesta1.setSelected(false);
                radio2Respuesta2.setSelected(false);
                radio3Respuesta3.setSelected(false);
                lab5Reactivos.setText("Reactivo : 1 de " + contenedordeReactivos.length);
                boton3Siguiente.setEnabled(true);
                //metodo para revolver los reactivos
                combinarReactivos();
                mostrarReactivo();
            } catch (NullPointerException e) {
                boton1IniciarEvaluacion.setEnabled(true);
                boton2TerminarEvaluacion.setEnabled(false);
                cbox1Mteria.setEnabled(true);
                cbox1Mteria.setSelectedIndex(0);
                cbox2Evaluacion.setEnabled(true);
                cbox2Evaluacion.removeAllItems();
                cbox2Evaluacion.addItem("Seleccione una opción");
            } catch (SQLException ex) {
                Logger.getLogger(InterfazIniciarEvaluacion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InterfazIniciarEvaluacion.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "SELECCIONA:\nMateria\nEvaluacion", "ERROR", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_iniciarEvaluacion

    //[4] consulta los ids de los reactivos
    public void seleccionarEvaluacion() throws SQLException, ClassNotFoundException {

        ControlEvaluacion evaluacion = new ControlEvaluacion();
        ResultSet contenido = null;
        try {

            boolean evaluacionContestada = evaluacion.consultarDisponibilidad(idUsuario, cbox2Evaluacion.getSelectedItem().toString());
            if (!evaluacionContestada) {
                contenido = evaluacion.consultarDatosyContenido(cbox2Evaluacion.getSelectedItem().toString());

            } else {
                JOptionPane.showMessageDialog(rootPane, "YA HA CONTESTADO LA EVALUACION", "ERROR", JOptionPane.ERROR_MESSAGE);

            }

        } catch (ClassNotFoundException | SQLException | NullPointerException ex) {
            System.out.println(ex);
        }

        //asignando los id de los reactivos dentro de un vector
        while (contenido.next()) {
            contenedordeReactivos = new String[Integer.parseInt(contenido.getObject(5).toString())][5];
            idEvaluacion = Integer.parseInt(contenido.getObject(1).toString());
            for (int i = 0; i < Integer.parseInt(contenido.getObject(5).toString()); i++) {
                contenedordeReactivos[i][0] = contenido.getObject((i + 9)).toString();

            }
        }

        //obtiene los reactivos de la evaluacion
        //y llena en el vector de strings los reactivos con sus respectivas respuestas
        ControlReactivo reactivo = new ControlReactivo();
        ResultSet consulta = null;

        for (int renglon = 0; renglon < contenedordeReactivos.length; renglon++) {
            for (int columna = 0; columna < contenedordeReactivos[0].length; columna++) {
                if (columna == 0) {
                    consulta = reactivo.consultar(Integer.parseInt(contenedordeReactivos[renglon][columna]));
                    consulta.next();
                }
                if (columna < 4) {
                    contenedordeReactivos[renglon][(columna + 1)] = consulta.getObject(columna + 1).toString();
                }
            }
        }

    }

    //[7]muestra el reactivo indicado
    public void mostrarReactivo() {
        txta1Reactivo.setText(contenedordeReactivos[posicionReactivo - 1][1]);
        radio1Respuesta1.setText(contenedordeReactivosRevueltos[posicionReactivo - 1][0]);
        radio2Respuesta2.setText(contenedordeReactivosRevueltos[posicionReactivo - 1][1]);
        radio3Respuesta3.setText(contenedordeReactivosRevueltos[posicionReactivo - 1][2]);

        radio1Respuesta1.setEnabled(true);
        radio2Respuesta2.setEnabled(true);
        radio3Respuesta3.setEnabled(true);

    }

    //[5] pide se cambien la forma de aparecer las respuestas Y la puntuacion del reactivo y las asigna a un vector
    public void combinarReactivos() throws ClassNotFoundException, SQLException {
        contenedordeReactivosRevueltos = new String[contenedordeReactivos.length][(contenedordeReactivos[0].length) - 1];
        ControlEvaluacion evaluacion = new ControlEvaluacion();
        ControlReactivo reactivo = new ControlReactivo();
        ResultSet puntuaciones = null;
        ResultSet resultadoEvaluacion = evaluacion.consultarIdEvaluacion(cbox2Evaluacion.getItemAt(cbox2Evaluacion.getSelectedIndex()).toString());
        int idEvaluacion = 0;
        try {
            while (resultadoEvaluacion.next()) {
                idEvaluacion = Integer.parseInt(resultadoEvaluacion.getObject(1).toString());
            }
            puntuaciones = reactivo.consultarPuntuacion(idEvaluacion);
            puntuaciones.next();

        } catch (SQLException e) {
        }
        for (int renglon = 0; renglon < contenedordeReactivosRevueltos.length; renglon++) {
            int[] nuevasPosiciones = generarMezcladeReactivos();
            String respuesta = "";
            for (int columna = 0; columna < contenedordeReactivosRevueltos[0].length; columna++) {
                try {
                    respuesta = contenedordeReactivos[renglon][(nuevasPosiciones[columna]) + 1];
                } catch (ArrayIndexOutOfBoundsException ex) {
                    respuesta = puntuaciones.getObject(renglon + 3).toString();
                }
                contenedordeReactivosRevueltos[renglon][columna] = respuesta;
            }
        }

    }

    //[6] genera una mezcla de posicion a las respuestas de los reactivos
    public int[] generarMezcladeReactivos() {
        Random generador = new Random();
        int posiciones[] = new int[3];
        int numero = generador.nextInt(3) + 1;
        posiciones[0] = numero;
        if (numero == 1) {
            posiciones[1] = 3;
            posiciones[2] = 2;

        } else if (numero == 2) {
            posiciones[1] = 1;
            posiciones[2] = 3;
        } else if (numero == 3) {
            posiciones[1] = 2;
            posiciones[2] = 1;
        }
        return posiciones;
    }

    //[1]establece el nombre y id del usuario en lainterfaz
    private void personalizarInterfaz(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_personalizarInterfaz
        jMenu1.setText("Mi cuenta: " + nombre + " : " + idUsuario);

        ControlGrupo grupo = new ControlGrupo();
        System.out.println("idusuario: " + idUsuario);
        ResultSet consultar = null;
        try {
            // se obtiene el grado y grupo del usuario
            consultar = grupo.consultarGrupodeAlumno(String.valueOf(idUsuario));

            boton2TerminarEvaluacion.setEnabled(false);
            boton3Siguiente.setEnabled(false);
            radio1Respuesta1.setEnabled(false);
            radio2Respuesta2.setEnabled(false);
            radio3Respuesta3.setEnabled(false);

            while (consultar.next()) {
                gradoUsuario = Integer.parseInt(consultar.getObject(1).toString());
                grupoUsuario = consultar.getObject(2).toString();
            }

        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(InterfazIniciarEvaluacion.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_personalizarInterfaz

    //[10]cierra la interfaz
    private void cerrarSesion(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesion
        int salir = JOptionPane.showConfirmDialog(rootPane, "SEGURO DESEA SALIR?");
        if (salir == 0) {
            InterfazLogin login = new InterfazLogin();
            login.setVisible(true);
            this.setVisible(false);

        }

    }//GEN-LAST:event_cerrarSesion


    private void buscarMaterias(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscarMaterias
        // TODO add your handling code here:
        cbox1Mteria.removeAllItems();
        cbox1Mteria.addItem("Seleccione una opción");

        ControlEvaluacion cEvaluacion = new ControlEvaluacion();
        try {
            ResultSet obtenerMaterias = cEvaluacion.obtenerMaterias();

            while (obtenerMaterias.next()) {
                cbox1Mteria.addItem(obtenerMaterias.getObject(1));
            }

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println(ex);
        }


    }//GEN-LAST:event_buscarMaterias

    //[11] limpia los campos de la interfaz
    public void limpiar() {
        cbox1Mteria.setEnabled(true);
        cbox2Evaluacion.setEnabled(true);
        cbox2Evaluacion.removeAllItems();
        cbox1Mteria.setSelectedIndex(0);
        txta1Reactivo.setText("");
        radio1Respuesta1.setText("");
        radio2Respuesta2.setText("");
        radio3Respuesta3.setText("");
        materiaSeleccionada = false;
        evaluacionSeleccionada = false;
        posicionReactivo = 1;
        contenedordeReactivos = null;
        contenedordeReactivosRevueltos = null;
        idEvaluacion = 0;
        lab5Reactivos.setText("Reactivo : 0 de " + 0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazIniciarEvaluacion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazIniciarEvaluacion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazIniciarEvaluacion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazIniciarEvaluacion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new InterfazIniciarEvaluacion().setVisible(true);

                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(InterfazIniciarEvaluacion.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton1IniciarEvaluacion;
    private javax.swing.JButton boton2TerminarEvaluacion;
    private javax.swing.JButton boton3Siguiente;
    private javax.swing.JComboBox cbox1Mteria;
    private javax.swing.JComboBox cbox2Evaluacion;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JMenuItem jitem1;
    private javax.swing.JPanel jp1IniciarEvaluacion;
    private javax.swing.JPanel jp2InformaciondeEvaluacion;
    private javax.swing.JPanel jp3Reactivos;
    private javax.swing.JLabel lab1Materia;
    private javax.swing.JLabel lab2Evaluacion;
    private javax.swing.JLabel lab3Informacion;
    private javax.swing.JLabel lab4Instrucciones;
    private javax.swing.JLabel lab5Reactivos;
    private javax.swing.JLabel lab6A;
    private javax.swing.JLabel lab7B;
    private javax.swing.JLabel lab8C;
    private javax.swing.JMenuBar menu1;
    private javax.swing.JRadioButton radio1Respuesta1;
    private javax.swing.JRadioButton radio2Respuesta2;
    private javax.swing.JRadioButton radio3Respuesta3;
    private javax.swing.JTextArea txta1Reactivo;
    private javax.swing.JTextArea txta2Resultado;
    // End of variables declaration//GEN-END:variables
}
